{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/categories/index.md","hash":"341bcad6262dd2136347f1bd2d1c2086f31df2ff","modified":1659428656431},{"_id":"source/_data/link.yml","hash":"6a715b99995564d2826e7e9ed43228274f7a8fc6","modified":1659429119952},{"_id":"source/about/index.md","hash":"7d2f0cb5b9d0b40f89e80b4fc9ac15f4580d2837","modified":1659429236530},{"_id":"source/css/style.css","hash":"27b72efa8081218044e24c55718c579e1404f8e2","modified":1659488051397},{"_id":"source/link/index.md","hash":"b3b525ec9151906b9a519d3da41ae1318720627e","modified":1659429187946},{"_id":"source/tags/index.md","hash":"26021b009627ff66688b9f1bb48e2d293a088534","modified":1659428630088},{"_id":"source/_posts/Git/Git分布式版本控制工具.md","hash":"f1adc1beb595396d7f51148840a0d658a0984a14","modified":1659497177734},{"_id":"source/_posts/黑盒测试/黑河测试的用例设计方法.md","hash":"8d0dfc0b7a2d5ca888a47c2d60fe400c54282633","modified":1659497677418},{"_id":"node_modules/hexo-theme-butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1659404750878},{"_id":"node_modules/hexo-theme-butterfly/README_CN.md","hash":"01b4feffb432293223f540921ce2cde748b2d2fe","modified":1659404751785},{"_id":"node_modules/hexo-theme-butterfly/README.md","hash":"cde88743f77bad1b463aa78049398b19f878090e","modified":1659404751802},{"_id":"node_modules/hexo-theme-butterfly/_config.yml","hash":"26a7fa8c79b3732318e751875aff79975abe3775","modified":1659404752428},{"_id":"node_modules/hexo-theme-butterfly/plugins.yml","hash":"0194c4fb88a6be30d983a83ac22072bb4d799c9a","modified":1659404752452},{"_id":"node_modules/hexo-theme-butterfly/.github/stale.yml","hash":"5e8ea535424e8112439135d21afc5262c0bc0b39","modified":1659404752467},{"_id":"node_modules/hexo-theme-butterfly/package.json","hash":"131f51995381c53060aec0f75a791df1c1f97aa2","modified":1659404751783},{"_id":"node_modules/hexo-theme-butterfly/languages/en.yml","hash":"d1bb560698eb8b0079495b7b18b44facb610f9fd","modified":1659404752444},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-CN.yml","hash":"28b6f0c39155651d747eb595e0a283bc97be2e09","modified":1659404752468},{"_id":"node_modules/hexo-theme-butterfly/languages/default.yml","hash":"1e37a3695d50e3e61d7c36e58a6dac872a4a56cd","modified":1659404752442},{"_id":"node_modules/hexo-theme-butterfly/languages/zh-TW.yml","hash":"947f794e862bb2813e36887f777bdb760f70a322","modified":1659404752473},{"_id":"node_modules/hexo-theme-butterfly/layout/archive.pug","hash":"a0c034c2d319320a54046805e80b58dc48b7e233","modified":1659404751860},{"_id":"node_modules/hexo-theme-butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1659404751913},{"_id":"node_modules/hexo-theme-butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1659404752128},{"_id":"node_modules/hexo-theme-butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1659404751994},{"_id":"node_modules/hexo-theme-butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1659404752145},{"_id":"node_modules/hexo-theme-butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1659404752239},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"67e4f5a66d4b8cabadbaad0410628364ee75e0ae","modified":1659404752436},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7dfe7189ffeaebb6db13842237f8e124649bea3d","modified":1659404752438},{"_id":"node_modules/hexo-theme-butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1659404752447},{"_id":"node_modules/hexo-theme-butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1659404752461},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/additional-js.pug","hash":"594a977ebe8d97e60fa3d7cb40fc260ded4d8a58","modified":1659404751826},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1659404751811},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1659404751957},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head.pug","hash":"de8e618ec03295561c667a49e1c383213b856f6f","modified":1659404751972},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/layout.pug","hash":"a557280a25f63f4312afad63fc3303ec74165557","modified":1659404752100},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":1659404752130},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/rightside.pug","hash":"699d0d2cff233628752956c4434125c8203f7d63","modified":1659404752177},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/sidebar.pug","hash":"8d39473ed112d113674a0f689f63fae06c72abd2","modified":1659404752182},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1659404751590},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/cdn.js","hash":"acfe765fb2c607bff7198630dbfa53a888c36357","modified":1659404751650},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/comment.js","hash":"a3d1f417965ca20253c36f9e93429f3df6268856","modified":1659404751654},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/init.js","hash":"b4940a5c73d3a5cd8bb5883e3041ecdd905a74e0","modified":1659404751677},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1659404751762},{"_id":"node_modules/hexo-theme-butterfly/scripts/events/welcome.js","hash":"3cfc46c749e2fd7ae9c2a17206238ed0e0e17e7d","modified":1659404751781},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1659404751752},{"_id":"node_modules/hexo-theme-butterfly/scripts/filters/random_cover.js","hash":"21379ed2dccb69c43b893895c9d56238c11e5f43","modified":1659404751756},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1659404751611},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1659404751608},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/inject_head_js.js","hash":"b4cd617c619d1a0df93603721a6fa1317526174b","modified":1659404751692},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/page.js","hash":"763dab5c83f50c1c62fffc9a9dfedea29bb4e629","modified":1659404751749},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/findArchiveLength.js","hash":"ee3e70098eb0849497d50b75e18cf4a27c397d52","modified":1659404751657},{"_id":"node_modules/hexo-theme-butterfly/scripts/helpers/related_post.js","hash":"d368a8830e506c8b5eb6512b709ec8db354d5ea1","modified":1659404751760},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/button.js","hash":"91d954f6e9fe6e571eb8ec9f8996294b2dc3688e","modified":1659404751616},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1659404751663},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/hide.js","hash":"396c3ab1bcf1c7693ad7e506eadd13016c6769b6","modified":1659404751676},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/gallery.js","hash":"f79c99f6c5b626c272dc2bed2b0250d6b91bb28a","modified":1659404751668},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1659404751696},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1659404751700},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1659404751734},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1659404751765},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/note.js","hash":"d51812b43924f1bbf413c67499510dd125022005","modified":1659404751745},{"_id":"node_modules/hexo-theme-butterfly/scripts/tag/timeline.js","hash":"300eb779588bf35a1b687d9f829d866074b707e3","modified":1659404751768},{"_id":"node_modules/hexo-theme-butterfly/source/css/var.styl","hash":"4890a40366d6443f8b8942a4e9a6dce9fe3494f5","modified":1659404752424},{"_id":"node_modules/hexo-theme-butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1659404752367},{"_id":"node_modules/hexo-theme-butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1659404751546},{"_id":"node_modules/hexo-theme-butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1659404751807},{"_id":"node_modules/hexo-theme-butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1659404751061},{"_id":"node_modules/hexo-theme-butterfly/source/js/main.js","hash":"73d2624ed465e4cfb1ebb00b2c8a24f5fc29bb21","modified":1659404751729},{"_id":"node_modules/hexo-theme-butterfly/source/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1659404751778},{"_id":"node_modules/hexo-theme-butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1659404751775},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":1659404752127},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/analytics.pug","hash":"15530d9ac59c576d79af75dd687efe71e8d261b0","modified":1659404751844},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1659404751918},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/config.pug","hash":"8f41fa9732ea654a10f6e666d9c782c7e27e5ea6","modified":1659404751919},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1659404751969},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1659404752126},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/preconnect.pug","hash":"65a23b5170204e55b813ce13a79d799b66b7382c","modified":1659404752151},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1659404752158},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1659404752198},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/index.pug","hash":"aa175e2254704335f4da09175e59ef2375ca7d03","modified":1659404751979},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1659404752118},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/post-info.pug","hash":"8c2524e843adfce00b16e31ee355f14ce9ffb8ba","modified":1659404752136},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1659404752207},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1659404752104},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1659404752106},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":1659404751869},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/header/nav.pug","hash":"78a3abd90bb3c18cd773d3d5abac3541e7f415e5","modified":1659404752124},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/mixins/post-ui.pug","hash":"0d10532648d0335254f21a3b7d8676cb96ea8eba","modified":1659404752137},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1659404751910},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/flink.pug","hash":"fed069baa9b383f57db32bb631115071d29bdc60","modified":1659404751956},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1659404751929},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/page/tags.pug","hash":"6311eda08e4515281c51bd49f43902a51832383c","modified":1659404752243},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/reward.pug","hash":"864869c43fe5b5bb6f4ac6b13dd4bfb16ea47550","modified":1659404752174},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/post/post-copyright.pug","hash":"ebecba46a5f4efe1c98a386df06c56e26fbd07b9","modified":1659404752134},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1659404751874},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1659404751876},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1659404751878},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_author.pug","hash":"e37468e63db2a0ac09b65d21b7de3e62425bb455","modified":1659404751882},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1659404751883},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1659404751884},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_newest_comment.pug","hash":"6d93564a8bd13cb9b52ee5e178db3bcbf18b1bc6","modified":1659404751886},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1659404751890},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":1659404751898},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1659404751901},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1659404751904},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/index.pug","hash":"7fb096656c8a6c21a4b6a5100885b1081d6021ed","modified":1659404751993},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1659404751908},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1659404751853},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/effect.pug","hash":"6528e86656906117a1af6b90e0349c2c4651d5e1","modified":1659404751943},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1659404752131},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/pjax.pug","hash":"6d6474ef186c18d9b4f334e1f735eadd6699effa","modified":1659404752133},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1659404752154},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/index.styl","hash":"714f19e7d66df84938bd1b82b33d5667abe1f147","modified":1659404752358},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/subtitle.pug","hash":"bae2f32ac96cebef600c1e37eaa8467c9a7e5d92","modified":1659404752233},{"_id":"node_modules/hexo-theme-butterfly/source/css/_global/function.styl","hash":"644d520fe80cc82058467708ab82ccad313b0c27","modified":1659404752336},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight.styl","hash":"2f95e99b8351fbecd9037a1bbdc3fee9d6ea8a77","modified":1659404752352},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1659404752416},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/aside.styl","hash":"a0010d833ed30211601c1e0bbbc68e85b77428c6","modified":1659404752300},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1659404752308},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1659404752310},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/footer.styl","hash":"26be2afa9d4e7016cf3c42a6cd166f01e8e4ad5c","modified":1659404752332},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/head.styl","hash":"d97c1722ce0fcc319f1f90ec2d51f9d746748e2b","modified":1659404752340},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1659404752386},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/loading.styl","hash":"ef21990de28bd75dcd0f88b8d616e1a7a137502f","modified":1659404752378},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/post.styl","hash":"15056fba0bd5a45ea8dc97eb557f6929ff16797a","modified":1659404752389},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1659404752393},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/reward.styl","hash":"c5cfed620708807a48076b5ee59b0ba84e29aa80","modified":1659404752398},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/rightside.styl","hash":"bd88ee30ebf8ca2e7b4d3a034c317fd61733921f","modified":1659404752405},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/sidebar.styl","hash":"631ca35a38bc4ac052e9caf47508ff1f99842fc7","modified":1659404752409},{"_id":"node_modules/hexo-theme-butterfly/source/css/_layout/third-party.styl","hash":"8314e9749eb1ae40c4bae9735b7a6638b2d6876a","modified":1659404752419},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/readmode.styl","hash":"69f8e9414526dfda3af9a71c8e528fdd0ecbbfe5","modified":1659404752392},{"_id":"node_modules/hexo-theme-butterfly/source/css/_mode/darkmode.styl","hash":"a92984f566c97bb4179f34be79240af1552c6f17","modified":1659404752317},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1659404752284},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1659404752307},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/archives.styl","hash":"6f4b4ede52305bce9b22c8c897dcbde8af6e2ce4","modified":1659404752291},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1659404752329},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/homepage.styl","hash":"8c90483d461e09cb06e91b16d8bb7b3205b0a40c","modified":1659404752355},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1659404752414},{"_id":"node_modules/hexo-theme-butterfly/source/css/_page/common.styl","hash":"a58d35d698885f1034dedbe99f7dbc1a801412c6","modified":1659404752311},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/algolia.styl","hash":"51e45625929d57c9df3ba9090af99b9b7bb9a15b","modified":1659404752288},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/index.styl","hash":"39d61cbe0c1e937f83ba3b147afaa29b4de2f87d","modified":1659404752365},{"_id":"node_modules/hexo-theme-butterfly/source/css/_search/local-search.styl","hash":"25e58a7a8bda4b73d0a0e551643ca01b09ccd7e5","modified":1659404752382},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1659404752305},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/gallery.styl","hash":"a310e48f826a4cacc55d8e68f43806e5085554f6","modified":1659404752338},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1659404752344},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1659404752341},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1659404752369},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1659404752368},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1659404752411},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/note.styl","hash":"85ae91c83691ea4511f4277da1194a185251cc78","modified":1659404752384},{"_id":"node_modules/hexo-theme-butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1659404752421},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1659404751603},{"_id":"node_modules/hexo-theme-butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1659404750928},{"_id":"node_modules/hexo-theme-butterfly/source/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1659404751722},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1659404751952},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1659404751936},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"2be601477e1b81eee90a00c14ce5c8761d19a332","modified":1659404751981},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1659404752160},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1659404752266},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"58406a7a3bf45815769f652bf3ef81e57dcd07eb","modified":1659404752261},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"5f648086a33a32d169a2f8d8c549c08aa02f67db","modified":1659404752274},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1659404751917},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1659404751924},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1659404751928},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1659404751967},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1659404751983},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1659404752250},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqus.pug","hash":"8ec24c1939895ac0db2b2e8700bc9307b4ceb53c","modified":1659404751940},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"98ef20f8a3b10c1692f9b2b3c06033d2da8a8eae","modified":1659404751941},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"2d8fc3fb8f9aec61400acf3c94070bd8539058f8","modified":1659404751945},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/giscus.pug","hash":"591ef23c583690bd74af0cafb09af64ba5bd8151","modified":1659404751960},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"22e2ef30fe5eb1db7566e89943c74ece029b2a8e","modified":1659404751964},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/index.pug","hash":"2e26af16d359ba362fa611575d7f547848057c0c","modified":1659404751986},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/js.pug","hash":"190b1cca42c7f73c50f62f07d0751449941bff3f","modified":1659404751997},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1659404752102},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/remark42.pug","hash":"e9bdf80d6796afc04eb809dbbe780d97f22c7fcd","modified":1659404752164},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"e18fbd88d8942e53e771f29b26209ab735c5c567","modified":1659404752263},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/utterances.pug","hash":"a737046e730eb7264606ba0536218964044492f9","modified":1659404752264},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/valine.pug","hash":"e55b9c0f8ced231f47eb88bd7f4ec99f29c5c29d","modified":1659404752269},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/comments/waline.pug","hash":"15462d1ed04651ad3b430c682842ac400f6f9b47","modified":1659404752277},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1659404751988},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1659404752003},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mathjax.pug","hash":"f4dc7d02c8192979404ae9e134c5048d3d0a76e2","modified":1659404752115},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/math/mermaid.pug","hash":"8e33aca36a4d3ae9e041ba05ced8eff56ae38f77","modified":1659404752120},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"04b2a5882e789a988e41d45abe606f0617b08e38","modified":1659404751933},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e846ddfe4a63b15d1416f6055f5756af5e3da7c6","modified":1659404751966},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"8ca02f97bfa93fff9cce5b8eb8feb234e7beeb98","modified":1659404751990},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"ab167c00da4506f591b96f0591bf5bd214a26d4b","modified":1659404752171},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"233907dd7f5b5f33412701d2ccffbc0bbae8707b","modified":1659404752255},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"d19e1c2c0a50f0e4547d71a17b9be88e8152f17c","modified":1659404752272},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"dd0bc119029b62dce5dc965d5de7377e438fa29a","modified":1659404752278},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/algolia.pug","hash":"e8245d0b4933129bb1c485d8de11a9e52e676348","modified":1659404751836},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1659404751991},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/search/local-search.pug","hash":"178c9cdcc4ce5a006885b24ce4a3d624e4734899","modified":1659404752109},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1659404751823},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1659404751831},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1659404751992},{"_id":"node_modules/hexo-theme-butterfly/layout/includes/third-party/share/share-js.pug","hash":"f61d63724ea5c5f352568b3a16bde023affefbe5","modified":1659404752179},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1659404752320},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1659404752327},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1659404752363},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1659404752360},{"_id":"node_modules/hexo-theme-butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1659404752370},{"_id":"public/css/style.css","hash":"965df0319871ef4f4220b706b279736ea61127ea","modified":1659497689068},{"_id":"public/baidu_urls.txt","hash":"ce3485534b94959958d7523464a7c1b778575492","modified":1659497689068},{"_id":"public/baidusitemap.xml","hash":"36c489a4f76643662941cc22b43ae5ccf06ffef2","modified":1659497689068},{"_id":"public/search.xml","hash":"cb57c5cfe840a10baae211eaa800b413389f77f3","modified":1659497689068},{"_id":"public/sitemap.xml","hash":"be60306ec4f848102d01630d10c0c80b8df14a1e","modified":1659497689068},{"_id":"public/404.html","hash":"daa3fbd05a39c666c31c26eae967315e5137ad68","modified":1659497689068},{"_id":"public/categories/index.html","hash":"126a44f133471dc2d208236f120dc4ff04c4842d","modified":1659497689068},{"_id":"public/about/index.html","hash":"5214559fe48cfa960c2dd8c95e080842df354c1b","modified":1659497689068},{"_id":"public/link/index.html","hash":"a05e81c5fdad8da7d8346581b5302d85db341dd2","modified":1659497689068},{"_id":"public/tags/index.html","hash":"c6e83e0c9b518346bc92bb145b2644390796025a","modified":1659497689068},{"_id":"public/archives/e01dd7d7.html","hash":"36480117fb3241ea2f56764bafa5ccc47137950f","modified":1659497689068},{"_id":"public/archives/c5309831.html","hash":"4869b59ee72b174ef10d6ffa048370db5f9a83ed","modified":1659497689068},{"_id":"public/archives/index.html","hash":"273b55807f3ad0180a1411ab022a361cc552a46c","modified":1659497689068},{"_id":"public/archives/2022/index.html","hash":"d546b8cc25cbd254a32ee1548e052a43efb596b3","modified":1659497689068},{"_id":"public/archives/2022/08/index.html","hash":"e36677bba4355dba12457a8cda3d9f9a18301bcd","modified":1659497689068},{"_id":"public/index.html","hash":"fef2358865513792ef72622140c2648f82d8fc98","modified":1659497689068},{"_id":"public/categories/Git/index.html","hash":"54727e88d4b01c7f6b41935861357f44804e4e80","modified":1659497689068},{"_id":"public/categories/软件测试/index.html","hash":"c25e0bf25582f51f2f7524f306ecc8e5c405b808","modified":1659497689068},{"_id":"public/categories/版本控制/index.html","hash":"2792c5d0fe41422ca3c3890fc80d327af87e437b","modified":1659497689068},{"_id":"public/categories/黑盒测试/index.html","hash":"689b3808bb9ced1a7d724f5176fdaf91aa638487","modified":1659497689068},{"_id":"public/tags/Git基本概念/index.html","hash":"144fbdee5cd07256ed5cb9ab5083c01912c5b740","modified":1659497689068},{"_id":"public/tags/Git工作流程/index.html","hash":"fda6e4eb17fcc895626b177bc19e2967fefa8ff4","modified":1659497689068},{"_id":"public/tags/Git代码托管/index.html","hash":"bfaeb2dca75a522dec9e23e7a70f0fd57e039aa6","modified":1659497689068},{"_id":"public/tags/使用idea操作Git/index.html","hash":"484c9e24a7d99d53962485b9431a0f5d30b6cc27","modified":1659497689068},{"_id":"public/tags/测试用例设计/index.html","hash":"309987ceaadcef5a4c3c190abc7be650f5deb92c","modified":1659497689068},{"_id":"public/tags/等价类划分/index.html","hash":"c598e32fc308b5754ad454c59f32cfcc58915034","modified":1659497689068},{"_id":"public/tags/边界值分析/index.html","hash":"2afbc3f995877d0ff8b20ba0e7b99612feca54f3","modified":1659497689068},{"_id":"public/tags/判定表法/index.html","hash":"e71f9e12869994041777ea1cfe25def265f32338","modified":1659497689068},{"_id":"public/tags/因果图法/index.html","hash":"064bf9fa15a6b47d4cdab5622a12a1167d2f394a","modified":1659497689068},{"_id":"public/tags/状态迁移法/index.html","hash":"63c576e396b131239a7ef66222221161f3cf8f49","modified":1659497689068},{"_id":"public/tags/场景法/index.html","hash":"692c83c0912f5bbbfe72bc50cd57ce56aa0a0472","modified":1659497689068},{"_id":"public/tags/正交实验设计法/index.html","hash":"dd0be7fc669d005c0f541f64d32ea30fe9c1b207","modified":1659497689068},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1659497689068},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1659497689068},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1659497689068},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1659497689068},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1659497689068},{"_id":"public/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1659497689068},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1659497689068},{"_id":"public/css/index.css","hash":"5a7cc9cd407df94712624fb4c15faacbabb461f6","modified":1659497689068},{"_id":"public/js/main.js","hash":"73d2624ed465e4cfb1ebb00b2c8a24f5fc29bb21","modified":1659497689068},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1659497689068}],"Category":[{"name":"Git","_id":"cl6d22sjo0006lovmhj8f8rjm"},{"name":"软件测试","_id":"cl6d22sjr000alovm4ooyd6sp"},{"name":"版本控制","_id":"cl6d22sjt000clovmgc0p1ioa"},{"name":"黑盒测试","_id":"cl6d22sju000elovm9ejx99v5"}],"Data":[{"_id":"link","data":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}],"Page":[{"title":"我们会有美好的未来","date":"2022-08-02T02:10:24.000Z","type":"categories","top_img":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/8(1).webp","_content":"","source":"categories/index.md","raw":"---\ntitle: 我们会有美好的未来\ndate: 2022-08-02 10:10:24\ntype: categories\ntop_img: https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/8(1).webp\n---\n","updated":"2022-08-02T08:24:16.431Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl6d22sj70000lovme5uka6kb","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/13(1).webp","excerpt":"","more":""},{"title":"about","date":"2022-08-02T08:28:20.000Z","type":"about","top_img":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/1(1).webp","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-08-02 16:28:20\ntype: about\ntop_img: https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/1(1).webp\n---\n","updated":"2022-08-02T08:33:56.530Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl6d22sjh0002lovmeog6gy0v","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/13(1).webp","excerpt":"","more":""},{"_content":"/* 鼠标样式 */\nbody {\n    cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/default.cur),\n      default;\n  }\n  a,\n  img {\n    cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/pointer.cur),\n      default;\n  }\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background-color: rgba(73, 177, 245, 0.2);\n    border-radius: 2em;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background-color: #49b1f5;\n    background-image: -webkit-linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.4) 25%,\n      transparent 25%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.4) 50%,\n      rgba(255, 255, 255, 0.4) 75%,\n      transparent 75%,\n      transparent\n    );\n    border-radius: 2em;\n  }\n  \n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n  \n  ::-moz-selection {\n    color: #fff;\n    background-color: #49b1f5;\n  }\n\n/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表白色透明度为0.3 */\n    background: rgba(255,255,255,.7);\n  }\n  /* 所有背景（包括首页卡片、文章页、页面页等） */\n  #aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表白色透明度为0.3 */\n    background: rgba(255,255,255,.7);\n  }\n\n","source":"css/style.css","raw":"/* 鼠标样式 */\nbody {\n    cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/default.cur),\n      default;\n  }\n  a,\n  img {\n    cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/pointer.cur),\n      default;\n  }\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background-color: rgba(73, 177, 245, 0.2);\n    border-radius: 2em;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background-color: #49b1f5;\n    background-image: -webkit-linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.4) 25%,\n      transparent 25%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.4) 50%,\n      rgba(255, 255, 255, 0.4) 75%,\n      transparent 75%,\n      transparent\n    );\n    border-radius: 2em;\n  }\n  \n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n  \n  ::-moz-selection {\n    color: #fff;\n    background-color: #49b1f5;\n  }\n\n/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表白色透明度为0.3 */\n    background: rgba(255,255,255,.7);\n  }\n  /* 所有背景（包括首页卡片、文章页、页面页等） */\n  #aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表白色透明度为0.3 */\n    background: rgba(255,255,255,.7);\n  }\n\n","date":"2022-08-03T00:54:11.397Z","updated":"2022-08-03T00:54:11.397Z","path":"css/style.css","layout":"false","title":"","comments":1,"_id":"cl6d22sjn0005lovme42ma6i7","content":"/* 鼠标样式 */\nbody {\n    cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/default.cur),\n      default;\n  }\n  a,\n  img {\n    cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/pointer.cur),\n      default;\n  }\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background-color: rgba(73, 177, 245, 0.2);\n    border-radius: 2em;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background-color: #49b1f5;\n    background-image: -webkit-linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.4) 25%,\n      transparent 25%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.4) 50%,\n      rgba(255, 255, 255, 0.4) 75%,\n      transparent 75%,\n      transparent\n    );\n    border-radius: 2em;\n  }\n  \n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n  \n  ::-moz-selection {\n    color: #fff;\n    background-color: #49b1f5;\n  }\n\n/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表白色透明度为0.3 */\n    background: rgba(255,255,255,.7);\n  }\n  /* 所有背景（包括首页卡片、文章页、页面页等） */\n  #aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表白色透明度为0.3 */\n    background: rgba(255,255,255,.7);\n  }\n\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/13(1).webp","excerpt":"","more":"/* 鼠标样式 */\nbody {\n    cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/default.cur),\n      default;\n  }\n  a,\n  img {\n    cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/pointer.cur),\n      default;\n  }\n\n/* 滚动条样式 */\n::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background-color: rgba(73, 177, 245, 0.2);\n    border-radius: 2em;\n  }\n  \n  ::-webkit-scrollbar-thumb {\n    background-color: #49b1f5;\n    background-image: -webkit-linear-gradient(\n      45deg,\n      rgba(255, 255, 255, 0.4) 25%,\n      transparent 25%,\n      transparent 50%,\n      rgba(255, 255, 255, 0.4) 50%,\n      rgba(255, 255, 255, 0.4) 75%,\n      transparent 75%,\n      transparent\n    );\n    border-radius: 2em;\n  }\n  \n  ::-webkit-scrollbar-corner {\n    background-color: transparent;\n  }\n  \n  ::-moz-selection {\n    color: #fff;\n    background-color: #49b1f5;\n  }\n\n/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表白色透明度为0.3 */\n    background: rgba(255,255,255,.7);\n  }\n  /* 所有背景（包括首页卡片、文章页、页面页等） */\n  #aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表白色透明度为0.3 */\n    background: rgba(255,255,255,.7);\n  }\n\n"},{"title":"小赵的好朋友们","date":"2022-08-02T02:11:25.000Z","type":"link","top_img":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/2(1).webp","_content":"","source":"link/index.md","raw":"---\ntitle: 小赵的好朋友们\ndate: 2022-08-02 10:11:25\ntype: link\ntop_img: https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/2(1).webp\n---\n","updated":"2022-08-02T08:33:07.946Z","path":"link/index.html","comments":1,"layout":"page","_id":"cl6d22sjp0007lovm69m6e8mr","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/13(1).webp","excerpt":"","more":""},{"title":"小赵的标签页","date":"2022-08-02T02:09:03.000Z","type":"tags","top_img":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/7(1).webp","_content":"","source":"tags/index.md","raw":"---\ntitle: 小赵的标签页\ndate: 2022-08-02 10:09:03\ntype: \"tags\"\ntop_img: https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/7(1).webp\n---\n","updated":"2022-08-02T08:23:50.088Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl6d22sjq0008lovmf9c6gu1x","content":"","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"cover":"https://fastly.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png","excerpt":"","more":""}],"Post":[{"title":"Git分布式版本控制工具","date":"2022-08-03T02:58:00.000Z","description":"目标:1.了解Git基本概念;2.能够概述Git工作流程;3.能够使用Git常用命令;4.熟悉Git代码托管服务;5.能够使用idea操作Git","sticky":1,"cover":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/6(1).webp","abbrlink":"e01dd7d7","_content":"\n# Git分布式版本控制工具\n\n## 1、目标\n\n* 了解Git基本概念\n* 能够概述Git工作流程\n* 能够使用Git常用命令\n* 熟悉Git代码托管服务\n* 能够使用idea操作Git\n\n## 2、概述\n\n### 2.1、开发中的实际场景\n\n```选择语言\n场景一:备份\n\t小明负责的模块就要完成了,就在即将release之前的一瞬间,电脑突然蓝屏,硬盘光荣牺牲!几个月来的努力付之东流.\n场景二:代码还原\n\t这个项目需要一个很复杂的功能,老王摸索了一个星期终于有了眉目,可是这被改得面目全非的代码已经回不来到从前了.什么地方能买到哆啦A梦的时光机啊?\n场景三:协同开发\n\t小刚和小强先后从文件服务器上下载了同一个文件:Analysis.java,小刚在Analysis.java文件中的第30行声明了一个方法,叫count(),先保存到了文件服务器上;小强在Analysis.Java文件中的第50行声明了一个方法,叫sum(),也随后保存到了文件服务器上,于是,count()方法就只存在于小刚的记忆中了\n场景四:追溯问题代码的编写人和编写时间\n\t老王是另一位项目经理,每次因为项目进度挨骂之后,他都不知道该扣那个程序员的工资!就拿这次来说吧,有个Bug调试了30多个小时才知道是因为相关属性没有在应用初始化时赋值!可是二胖,王东,刘流和正经牛都不承认是自己干的!\n```\n\n### 2.2、版本控制的方式\n\n```选择语言\n1.集中式版本控制工具\n\t集中式版本控制工具,版本库是集中存放在中央服务器的,team里每个人work时从服务器下载代码,是必须联网才能工作,局域网或互联网.个人修改然后提交到中央版本库.\n\t举例:SVN和CVS\n2.分布式版本控制工具\n\t分布式版本控制系统没有\"中央服务器\",每个人的电脑上都是一个完整的版本库,这样工作的时候,无需要联网了,因为版本库就在自己的电脑上.多人协作只需要各自修改推送给对方,就能互相看到对方的修改了.\n\t举例:Git\n```\n\n### 2.3、SVN\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/svn.png)\n\n### 2.4、Git\n\n```选择语言\n\tgit是分布式的,git不需要有中心服务器,我们每台电脑拥有的东西都是一样的.我们使用git并且有个中心服务器,仅仅是为了方便交换大家 的修改,但是这个服务器的地位和我们每个人夫人pc是一样的.我们可把他当作一个开发者的pc就可以,就是为了大家代码容易交流不关机用的.没有它大家一样可以工作,只不过\"交换\"修改不方便而已.\n\tgit是一个开源的分布式版本控制工具,可以是有效,高速地处理从很小到非常大的项目版本管理.git是Linus Torvalds 为了帮助管理 Linux内核开发而开发的一个开放源码的版本控制软件.\n\t同生活中的许多伟大的事物一样,git诞生于一个极富纷争大举创新的年代.Linux内核开源项目有着为数众多的参与者.绝大多数的Linux内核维护工作都花在了提交补丁和保存归档的繁琐事务上(1991-2002年间).到2002年,整个项目组开始启用一个专有的分布式版本控制系统BitKeeper来管理和维护代码.\n\t到了2005年,开发BitKeeper的商业公司同Linux内核开源社区的合作关系结束,他们收回了Linux内核社区免费使用BitKeeper的权利.这就迫使Linux开源社区(也别是Linux的缔造者Linus Torvalds)基于使用BitKeeper时的经验教训,开发出自己的版本系统.她们对新的系统制定了若干目标:\n\t速度\n\t简单的设计\n\t对非线性开发模式的强大支持(允许成千上万个并行开发的分支)\n\t完全分布式\n\t有能力高效管理类似Linux内核一样的超大规模项目(速度和数据量)\n```\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/git.png)\n\n### 2.5、Git工作流程图\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%9B%BE.png)\n\n命令如下:\n\n1. clone(克隆):从远程仓库中克隆代码到本地仓库\n2. checkout(检出):从本地仓库中检出一个仓库分支然后进行修订\n3. add(添加):在提交前先将代码提交到暂存区\n4. commit(提交):提交到本地仓库.本地仓库中保存修改的各个历史版本\n5. fetch(抓取):从远程库,抓取到本地仓库,不进行任何的合并动作,一般操作比较少.\n6. pull(拉取):从远程库拉到本地库,自动进行合并(merge),然后放到工作区,相当于fetch+merge\n7. push(推送):修改完成后,需要和团队成员共享代码时,将代码推送到远程仓库\n\n## 3、Git安装与常用命令\n\n本教程里的git命令例子都是在Git Bash中演示的,会用到一些基本的Linux命令,在此为大家提前列举:\n\n* ls/ll\t查看当前目录\n* cat    查看文件内容\n* touch 创建文件\n* vi     vi编辑器(使用vi编辑器是为了方便展示效果,学员可以记事本,editPlus,notPad++等其他编辑器)\n\n### 3.1、Git环境配置\n\n#### 3.1.1 下载与安装\n\n下载地址:https://git-scm.com/download\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/dowanload.png)\n\n下载完成后可以得到如下安装文件:\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/exe.png)\n\n双击下载的安装文件来安装git,安装完成后在电脑桌面(也可以是其他目录)点击右键,如果能够看到如下两个菜单则说明git安装成功.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%88%90%E5%8A%9F.png)\n\n备注:\n\n​\tGit GUI:Git提供的图形界面工具\n\n​\tGit Bash:Git提供的命令行工具\n\n​\t当安装Git后首先要做的事情是设置用户名称和email地址.这是非常重要的,因为每次Git提交都会使用该用户信息\n\n#### 3.1.2 基本配置\n\n1. 打开Git Bash\n\n2. 设置用户信息\n\n   git config --global user.name \"itcast\"\n\n   git config --global user.email \"hello@itcast.cn\"\n\n3. 查看配置信息\n\n   git config --global user.name\n\n   git config --global user.email\n\n#### 3.1.3为常用指令配置别名(可选)\n\n有些常用的指令参数非常多,每次都要输入好多参数,我们可以使用别名.\n\n1. 打开用户目录,创建.bashrc文件\n\n   部分windows系统不允许用户创建点号开头的文件,可以打开gitBash,执行 touch ~/.bashrc\n\n   ~表示当前目录的根目录\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/bashrc.png)\n\n2. 在.bashrc文件中输入如下内容:\n\n   ```shell\n   #用于输出git提交日志\n   alias git-log='git log --pretty=oneline --all --graph --abbrev-commit'\n   #用于输出当前目录所有文件及基本信息\n   alias ll='ls -al'\n   ```\n\n3. 打开gitBash,执行source ~/.bashrc\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/souce.png)\n\n#### 3.1.4 解决GitBash乱码问题\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E4%B9%B1%E7%A0%81%E8%AE%BE%E7%BD%AE.png)\n\n### 3.2、获取本地仓库\n\n要使用Git对我们的代码进行版本控制,首先需要获得本地仓库\n\n(1)在电脑的任意位置创建一个空目录(例如test)作为我们的本地Git仓库\n\n(2)进入这个目录中,点击右键打开Git bash窗口\n\n(3)执行命令git init\n\n(4)如果创建成功后可在文件夹下看到隐藏的.git目录\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png)\n\n### 3.3、基础操作指令\n\nGit工作目录(除了.git文件外的目录叫做工作目录)下对于文件的修改(增加,删除,更新)会存在几个状态,这些修改的状态会随着我们执行Git命令而发生变化.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E6%8C%87%E4%BB%A4.png)\n\n本章节主要讲解如何使用命令来控制状态之间的转换:\n\n1. git add (工作区-->暂存区)\n2. git commit (暂存区-->本地仓库)\n\n#### 3.3.1、查看修改的状态(status)\n\n* 作用:查看的修改的状态(暂存区、工作区)\n* 命令形式:git status\n\n#### 3.3.2、添加工作区到暂存区(add)\n\n* 作用:添加工作区一个或多个文件的修改到暂存区\n\n* 命令形式:git add 单个文件名|通配符\n\n  将所有修改加入暂存区:git add .(.表示所有)\n\n#### 3.3.3、提交暂存区到本地仓库(commit)\n\n* 作用:提交暂存区内容到本地仓库的当前分支\n* 命令形式:git commit -m '注释内容'\n\n#### 3.3.4、查看提交日志(log)\n\n在3.1.3中配置的别名git-log就包含了这些参数,所以后续可以直接使用指令git-log\n\n* 作用:查看提交记录\n\n* 命令形式:git log [option]\n\n  options\n\n  ​\t--all 显示所有分支\n\n  ​\t--pretty=oneline 将提交信息显示为一行\n\n  ​\t--abbrev-commit 使得输出得commitld更简短\n\n  ​\t--graph 以图得形式显示\n\n#### 3.3.5、版本回退\n\n* 作用:版本切换\n\n* 命令形式:git reset --hard commitID\n\n  commitID可以使用git-log或git log指令查看\n\n* 如何查看已经删除得记录?\n\n  git reflog(把所有的版本操作都记录下来了)\n\n  这个指令可以看到已经删除的提交记录\n\n  注意:\n\n  这里选中即表示已经复制(不需要用CTRL C因为它在Linux中有其他的设置)\n\n  选中之后即表示已经复制好,那么粘贴也不要使用ctrl+v,直接按一下滚轮,或者使用右键,选中粘贴也行.\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80.png)\n\n#### 3.3.6、添加文件至忽略列表\n\n一般我们总会有些文件无需纳入git的管理,也不希望它们总出现在未跟踪文件列表.通常都是些自动生成的文件,比如日志文件,或者编译过程中创建的临时文件等.在这种情况下,我们可以在工作目录中创建一个名为.gitignore的文件(文件名称固定),列出要忽略的文件模式.下面是一个示例:\n\n在.gitignore文件中写上不需要git管理的文件,表示不需要管理所有的.a的文件.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%A4%BA%E4%BE%8B.png)\n\n实际操作:\n\n首先从这个工作目录下打开git bash\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/3.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/4.png)\n\n这里git add有两种方法:(1)git add 文件名;(2)git add' .表示所有add(这里习惯用这种)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/5.png)\n\n修改文件\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/6.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/7.png)\n\n### 3.4、分支\n\n几乎所有的版本控制系统都以某种形式支持分支.使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的bug修改,开发新的功能,以免影响开发主线.\n\n#### 3.4.1、查看本地分支\n\n* 命令:git branch\n\n#### 3.4.2、创建本地分支\n\n* 命令:git branch 分支名\n\n#### 3.4.3、切换分支(checkout)\n\n* 命令:git checkout 分支名\n\n  我们还可以直接切换到一个不存在的分支(创建并切换)\n\n* 命令:git checkout -b 分支名\n\n#### 3.4.4、合并分支(merge)\n\n一个分支上的提交可以合并到另一个分支\n\n命令:git merge 分支名称\n\n合并的快进模式:\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%90%88%E5%B9%B6%E7%9A%84%E5%BF%AB%E8%BF%9B%E6%A8%A1%E5%BC%8F.png)\n\n#### 3.4.5、删除分支\n\n不能删除当前分支,只能删除其他分支\n\ngit branch -d b1 删除分支时,需要做各种检查\n\ngit branch -D b1 不做任何检查,强制删除\n\n#### 3.4.6、解决冲突\n\n当两个分支上对文件的修改可能会存在冲突,例如同时修改了同一个文件的同一行,这时就需要手动解决冲突,解决冲突步骤如下:\n\n1. 处理文件中冲突的地方\n2. 将解决完冲突的文件加入暂存区(add)\n3. 提交到仓库(commit)\n\n冲突部分的内容处理如下所示:\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%86%B2%E7%AA%81.png)\n\n#### 3.4.7、开发中分支使用原则与流程\n\n几乎所有的版本控制系统都是以某种形式支持分支.使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的bug修改,开发新的功能,以免影响开发主线.\n\n在开发中,一般有如下分支使用原则与流程:\n\n* master(生产)分支\n\n  线上分支,主分支,中小规模项目作为线上运行的应用对应的分支;\n\n* develop(开发)分支\n\n  是从master创建的分支,一般作为开发部门的主要开发分支,如果没有其他并行开发不同期上线要求,都可以在此版本进行开发,阶段开发完成后,需要是合并到master分支,准备上线.\n\n* feature/xxxx分支\n\n  从develop创建的分支.一般是同期并发开发,但不同期上线时创建的分支,分支上的研发任务完成后合并到develop分支.\n\n* hotfix/xxxx分支\n\n  从master派生的分支,一般作为线上bug修复使用,修复完成后需要合并到master,test,develop分支.\n\n* 还有一些其他分支,在此不再详述,例如test分支(用于代码测试),pre分支(预上线分支)等等.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%BC%80%E5%8F%91%E4%B8%AD%E5%88%86%E6%94%AF%E7%9A%84%E5%8E%9F%E5%88%99.png)\n\n## 4、Git远程仓库\n\n### 4.1、常用的托管服务[远程仓库]\n\n```选择语言\n前面我们已经知道了Git中存在两种类型的仓库,即本地仓库和远程仓库.那么我么如何搭建Git远程仓库呢?我们可以借助互联网上提供的一些代码托管来实现,其中比较常见的有GitHub,码云,GitLab等.\nGitHub(地址:https://github.com/)是一个面向开源及私有软件项目的托管平台,因为只支持git作为唯一的版本库格式进行托管,故名GitHub\n码云(地址:https://gitee.com/)是国内的一个代码托管平台,由于服务器在国内,所以相比于GitHub,码云速度会更快.\ngitlab(地址:https://about.gitlab.com/)是一个用于仓库管理系统的开源项目,使用git作为代码管理工具,并在此基础上搭建起来的web服务,一般用于企业,学校等内部网络搭建git私服.\n```\n\n### 4.2、注册码云\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B3%A8%E5%86%8C%E7%A0%81%E4%BA%91.png)\n\n### 4.3、创建远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%931.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%932.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%933.png)\n\n### 4.4、配置SSH公钥\n\n* 生成SSH公钥\n\n  ssh-keygen-t rsa\n\n  不断回车\n\n  ​\t如果公钥已经存在,则自动覆盖\n\n* Gitee设置账户共公钥\n\n  获取公钥\n\n  ​\tcat ~/.ssh/id_rsa.pub\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%AC%E9%92%A5.png)\n\n* 验证是否配成功\n\n  ssh-T git@gitee.com\n\n后面回答yes即可\n\n### 4.5、操作远程仓库\n\n#### 4.5.1、添加远程仓库\n\n此操作是先初始化本地库,然后与已创建的远程库进行对接\n\n* 命令:git remote add <远端名称> <仓库路径>\n\n  远端名称,默认是origin,取决于远端服务器设置\n\n  仓库路径,从远端服务器获取此url\n\n  例如:git remote add origin git@gitee.com:czbk_zhang_meng/git_test.git\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n#### 4.5.2、查看远程仓库\n\n* 命令:git remote\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n####  4.5.3、推送到远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n* 命令:git push [-f] [--set-upstream] [远端名称[本地分支名] [:远端分支名]]\n\n  如果远程分支名和本地分支名称相同,则可以只写本地分支\n\n  git push origin master\n\n  -f表示强制覆盖\n\n  --set-upstream推送到远端的同时并且建立起和远端分支的关联关系\n\n  git push --set-upstream origin master\n\n  如果当前分支已经和远端分支关联,则可以省略分支名和远端名\n\n  git push将master分支推送到已关联的远端分支.\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%812.png)\n\n验证是否推上去\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E8%AF%A2%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n#### 4.5.4、本地分支与远程分支的关联关系\n\n* 查看关联关系我们可以使用git branch -vv命令\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E7%9C%8B%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB.png)\n\n#### 4.5.5、从远程仓库克隆\n\n如果已经有一个远端仓库,我们可以直接clone到本地\n\n* 命令:git clone <仓库名称> [本地目录]\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%86.png)\n\n本地目录可以省略,会自动生成一个目录(也就是以.git前面的git_test生成一个本地仓库的目录)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%861.png)\n\n对于同一个仓库,一般只克隆一次\n\n#### 4.5.6、从远程仓库中抓取和拉取\n\n远程分支和本地分支一样,我们可以进行merge操作,只是需要先把远程仓库里的更新都下载到本地,在进行操作.\n\n* 抓取命令:git fetch [remote name] [branch name]\n\n  抓取指令就是将仓库里的更新都抓取到本地,不会进行合并\n\n  如果不指定远端名称和分支名,则抓取所有分支\n\n* 拉取命令:git pull [remote name] [branch name]\n\n  拉去指令就是将远端仓库的修改拉到本地并自动进行合并,等同于fetch+merge\n\n  如果不指定远端名称和分支名,则抓取所有并更新当前分支.\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%81.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8B%89%E5%8F%96.png)\n\n注意:\n\n退出vi编辑器要按esc,然后再输入:wq即退出了\n\n#### 4.5.7、解决合并冲突\n\n在一段时间,A,B用户修改了同一个文件,且修改了同一行位置的代码,此时会发生合并冲突.\n\nA用户在本地修改代码后优先推送到远程仓库,此时B用户再本地修订代码,提交到本地仓库后,也需要推送到远程仓库,此时B用户晚于A用户,故需要先拉取远程仓库的提交,经过合并后才能推送到远端分支,如下图所示.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B3%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81.png)\n\n再B用户拉取代码时,因为A,B用户同一段时间修改了同一个文件的相同位置的代码,故会发生合并冲突.\n\n远程分支也是分支,所有合并冲突的解决方式也和解决本地冲突的方式相同.\n\n练习:\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%BB%83%E4%B9%A01.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%BB%83%E4%B9%A02.png)\n\n## 5、在Idea中使用Git\n\n### 5.1、在Idea中配置Git\n\n安装好Intellij IDEA后,如果Git安装在默认路径下,那么idea会自动找到git的位置,如果更改了Git的安装位置则需要手动配置Git的路劲,选择File->Settings打开设置窗口,找到Version Control下的git选项:\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea2.png)\n\n### 5.2、在Idea中操作Git\n\n场景:本地已经有一个项目,但是并不是git项目,我们需要将这个放到码云的仓库里,和其他开发人员继续一起协作开发.\n\n#### 5.2.1、创建项目远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%931.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%932.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA2.png)\n\n#### 5.2.2、初始化本地仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png)\n\n#### 5.2.3、设置远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE3.png)\n\n#### 5.2.4、提交到本地仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A41.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A42.png)\n\n#### 5.2.5、推送到远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A43.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A44.png)\n\n在接下来的完成修改之后也是这样推送到远程仓库,只是和第一次有一些不一样\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%87%8D%E6%8E%A81.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%87%8D%E6%8E%A82.png)\n\n#### 5.2.6、克隆远程仓库到本地\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8611.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8622.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8633.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8644.png)\n\n当两个开发在同一文件的统一代码上进行修改时,当第一个完成的能够push上去,后面的这个人就需要先pull一下,merge之后才能推.\n\n这里演示第二个人要怎么操作解决冲突\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B31.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B32.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B33.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B34.png)\n\n解决好冲突代码之后要把红色报错部分改成蓝色,所以右击红色文件\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B35.png)\n\n最后commit然后push上去\n\n#### 5.2.7、创建分支\n\n* 最常规的方式\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF1.png)\n\n* 最强大的方式\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF3.png)\n\n#### 5.2.8、切换分支及其他分支相关的操作\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF4.png)\n\n#### 5.2.9、解决冲突\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81.png)\n\n### 5.3、IDEA常用GIT操作入口\n\n1.第一张图上的快捷入口可以基于满足开发的需求\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea%E6%93%8D%E4%BD%9C.png)\n\n2.第二张图是更多在IDEA操作git的入口\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea%E6%93%8D%E4%BD%9C1.png)\n\n### 5.4、场景分析\n\n基于我们后面的实战模拟,我们做一个综合练习\n\n当前的开发环境如下,我们每个人都对这个项目已经开发一段时间,接下来我们要切换成团队开发模式.\n\n也就是我们由一个团队来完成这个项目实战的内容.团队由组长和若干组员组成(组长就是开发中的项目经理).所有操作在idea中完成.\n\n来呢西场景如下:\n\n1.由组长,基于本项目创建本地仓库;创建远程仓库,推送项目到远程仓库.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF1.png)\n\n2.每一位组员从远程仓库克隆项目到idea中,这样每位同学在自己的电脑上就有了一个工作副本,可以证实的开始开发了.我们模拟两个组员(组员A,组员B),克隆两个工作区.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF2.png)\n\n3.组员A修改工作区,提交到本地仓库,再推送到远程仓库.组员B可以直接从远程仓库获取最新的代码.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF3.png)\n\n4.组员A和组员B修改了同一个文件的同一行,提交到本地没有问题,但是推送到远程仓库时,后一个推送操作就会失败.\n\n解决方法:需要先获取远程仓库的代码到本地仓库,编辑冲突,提交并推送代码.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF4.png)\n\n## 附:几条铁令\n\n1.切换分支前先提交本地的修改\n\n2.代码及时提交,提交过了就不会丢\n\n3.遇到任何问题都不要删除文件目录\n\n## 附:疑难问题解决\n\n1.windows下看不到隐藏文件(.bashrc)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.png)\n\n## 附:IDEA集成GitBash作为Terminal\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/terminal.png)\n\n## git常用指令速查\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%80%9F%E6%9F%A5png.png)\n\n\n\n\n\n\n\n","source":"_posts/Git/Git分布式版本控制工具.md","raw":"---\ntitle: Git分布式版本控制工具\ndate: '2022-8-3 10:58:00'\ndescription: '目标:1.了解Git基本概念;2.能够概述Git工作流程;3.能够使用Git常用命令;4.熟悉Git代码托管服务;5.能够使用idea操作Git'\nsticky: 1\ncover: 'https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/6(1).webp'\nabbrlink: e01dd7d7\ncategories: \n - [Git]\n - [版本控制]\ntags:\n - Git基本概念\n - Git工作流程\n - Git代码托管\n - 使用idea操作Git\n\n---\n\n# Git分布式版本控制工具\n\n## 1、目标\n\n* 了解Git基本概念\n* 能够概述Git工作流程\n* 能够使用Git常用命令\n* 熟悉Git代码托管服务\n* 能够使用idea操作Git\n\n## 2、概述\n\n### 2.1、开发中的实际场景\n\n```选择语言\n场景一:备份\n\t小明负责的模块就要完成了,就在即将release之前的一瞬间,电脑突然蓝屏,硬盘光荣牺牲!几个月来的努力付之东流.\n场景二:代码还原\n\t这个项目需要一个很复杂的功能,老王摸索了一个星期终于有了眉目,可是这被改得面目全非的代码已经回不来到从前了.什么地方能买到哆啦A梦的时光机啊?\n场景三:协同开发\n\t小刚和小强先后从文件服务器上下载了同一个文件:Analysis.java,小刚在Analysis.java文件中的第30行声明了一个方法,叫count(),先保存到了文件服务器上;小强在Analysis.Java文件中的第50行声明了一个方法,叫sum(),也随后保存到了文件服务器上,于是,count()方法就只存在于小刚的记忆中了\n场景四:追溯问题代码的编写人和编写时间\n\t老王是另一位项目经理,每次因为项目进度挨骂之后,他都不知道该扣那个程序员的工资!就拿这次来说吧,有个Bug调试了30多个小时才知道是因为相关属性没有在应用初始化时赋值!可是二胖,王东,刘流和正经牛都不承认是自己干的!\n```\n\n### 2.2、版本控制的方式\n\n```选择语言\n1.集中式版本控制工具\n\t集中式版本控制工具,版本库是集中存放在中央服务器的,team里每个人work时从服务器下载代码,是必须联网才能工作,局域网或互联网.个人修改然后提交到中央版本库.\n\t举例:SVN和CVS\n2.分布式版本控制工具\n\t分布式版本控制系统没有\"中央服务器\",每个人的电脑上都是一个完整的版本库,这样工作的时候,无需要联网了,因为版本库就在自己的电脑上.多人协作只需要各自修改推送给对方,就能互相看到对方的修改了.\n\t举例:Git\n```\n\n### 2.3、SVN\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/svn.png)\n\n### 2.4、Git\n\n```选择语言\n\tgit是分布式的,git不需要有中心服务器,我们每台电脑拥有的东西都是一样的.我们使用git并且有个中心服务器,仅仅是为了方便交换大家 的修改,但是这个服务器的地位和我们每个人夫人pc是一样的.我们可把他当作一个开发者的pc就可以,就是为了大家代码容易交流不关机用的.没有它大家一样可以工作,只不过\"交换\"修改不方便而已.\n\tgit是一个开源的分布式版本控制工具,可以是有效,高速地处理从很小到非常大的项目版本管理.git是Linus Torvalds 为了帮助管理 Linux内核开发而开发的一个开放源码的版本控制软件.\n\t同生活中的许多伟大的事物一样,git诞生于一个极富纷争大举创新的年代.Linux内核开源项目有着为数众多的参与者.绝大多数的Linux内核维护工作都花在了提交补丁和保存归档的繁琐事务上(1991-2002年间).到2002年,整个项目组开始启用一个专有的分布式版本控制系统BitKeeper来管理和维护代码.\n\t到了2005年,开发BitKeeper的商业公司同Linux内核开源社区的合作关系结束,他们收回了Linux内核社区免费使用BitKeeper的权利.这就迫使Linux开源社区(也别是Linux的缔造者Linus Torvalds)基于使用BitKeeper时的经验教训,开发出自己的版本系统.她们对新的系统制定了若干目标:\n\t速度\n\t简单的设计\n\t对非线性开发模式的强大支持(允许成千上万个并行开发的分支)\n\t完全分布式\n\t有能力高效管理类似Linux内核一样的超大规模项目(速度和数据量)\n```\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/git.png)\n\n### 2.5、Git工作流程图\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%9B%BE.png)\n\n命令如下:\n\n1. clone(克隆):从远程仓库中克隆代码到本地仓库\n2. checkout(检出):从本地仓库中检出一个仓库分支然后进行修订\n3. add(添加):在提交前先将代码提交到暂存区\n4. commit(提交):提交到本地仓库.本地仓库中保存修改的各个历史版本\n5. fetch(抓取):从远程库,抓取到本地仓库,不进行任何的合并动作,一般操作比较少.\n6. pull(拉取):从远程库拉到本地库,自动进行合并(merge),然后放到工作区,相当于fetch+merge\n7. push(推送):修改完成后,需要和团队成员共享代码时,将代码推送到远程仓库\n\n## 3、Git安装与常用命令\n\n本教程里的git命令例子都是在Git Bash中演示的,会用到一些基本的Linux命令,在此为大家提前列举:\n\n* ls/ll\t查看当前目录\n* cat    查看文件内容\n* touch 创建文件\n* vi     vi编辑器(使用vi编辑器是为了方便展示效果,学员可以记事本,editPlus,notPad++等其他编辑器)\n\n### 3.1、Git环境配置\n\n#### 3.1.1 下载与安装\n\n下载地址:https://git-scm.com/download\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/dowanload.png)\n\n下载完成后可以得到如下安装文件:\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/exe.png)\n\n双击下载的安装文件来安装git,安装完成后在电脑桌面(也可以是其他目录)点击右键,如果能够看到如下两个菜单则说明git安装成功.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%88%90%E5%8A%9F.png)\n\n备注:\n\n​\tGit GUI:Git提供的图形界面工具\n\n​\tGit Bash:Git提供的命令行工具\n\n​\t当安装Git后首先要做的事情是设置用户名称和email地址.这是非常重要的,因为每次Git提交都会使用该用户信息\n\n#### 3.1.2 基本配置\n\n1. 打开Git Bash\n\n2. 设置用户信息\n\n   git config --global user.name \"itcast\"\n\n   git config --global user.email \"hello@itcast.cn\"\n\n3. 查看配置信息\n\n   git config --global user.name\n\n   git config --global user.email\n\n#### 3.1.3为常用指令配置别名(可选)\n\n有些常用的指令参数非常多,每次都要输入好多参数,我们可以使用别名.\n\n1. 打开用户目录,创建.bashrc文件\n\n   部分windows系统不允许用户创建点号开头的文件,可以打开gitBash,执行 touch ~/.bashrc\n\n   ~表示当前目录的根目录\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/bashrc.png)\n\n2. 在.bashrc文件中输入如下内容:\n\n   ```shell\n   #用于输出git提交日志\n   alias git-log='git log --pretty=oneline --all --graph --abbrev-commit'\n   #用于输出当前目录所有文件及基本信息\n   alias ll='ls -al'\n   ```\n\n3. 打开gitBash,执行source ~/.bashrc\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/souce.png)\n\n#### 3.1.4 解决GitBash乱码问题\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E4%B9%B1%E7%A0%81%E8%AE%BE%E7%BD%AE.png)\n\n### 3.2、获取本地仓库\n\n要使用Git对我们的代码进行版本控制,首先需要获得本地仓库\n\n(1)在电脑的任意位置创建一个空目录(例如test)作为我们的本地Git仓库\n\n(2)进入这个目录中,点击右键打开Git bash窗口\n\n(3)执行命令git init\n\n(4)如果创建成功后可在文件夹下看到隐藏的.git目录\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png)\n\n### 3.3、基础操作指令\n\nGit工作目录(除了.git文件外的目录叫做工作目录)下对于文件的修改(增加,删除,更新)会存在几个状态,这些修改的状态会随着我们执行Git命令而发生变化.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E6%8C%87%E4%BB%A4.png)\n\n本章节主要讲解如何使用命令来控制状态之间的转换:\n\n1. git add (工作区-->暂存区)\n2. git commit (暂存区-->本地仓库)\n\n#### 3.3.1、查看修改的状态(status)\n\n* 作用:查看的修改的状态(暂存区、工作区)\n* 命令形式:git status\n\n#### 3.3.2、添加工作区到暂存区(add)\n\n* 作用:添加工作区一个或多个文件的修改到暂存区\n\n* 命令形式:git add 单个文件名|通配符\n\n  将所有修改加入暂存区:git add .(.表示所有)\n\n#### 3.3.3、提交暂存区到本地仓库(commit)\n\n* 作用:提交暂存区内容到本地仓库的当前分支\n* 命令形式:git commit -m '注释内容'\n\n#### 3.3.4、查看提交日志(log)\n\n在3.1.3中配置的别名git-log就包含了这些参数,所以后续可以直接使用指令git-log\n\n* 作用:查看提交记录\n\n* 命令形式:git log [option]\n\n  options\n\n  ​\t--all 显示所有分支\n\n  ​\t--pretty=oneline 将提交信息显示为一行\n\n  ​\t--abbrev-commit 使得输出得commitld更简短\n\n  ​\t--graph 以图得形式显示\n\n#### 3.3.5、版本回退\n\n* 作用:版本切换\n\n* 命令形式:git reset --hard commitID\n\n  commitID可以使用git-log或git log指令查看\n\n* 如何查看已经删除得记录?\n\n  git reflog(把所有的版本操作都记录下来了)\n\n  这个指令可以看到已经删除的提交记录\n\n  注意:\n\n  这里选中即表示已经复制(不需要用CTRL C因为它在Linux中有其他的设置)\n\n  选中之后即表示已经复制好,那么粘贴也不要使用ctrl+v,直接按一下滚轮,或者使用右键,选中粘贴也行.\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80.png)\n\n#### 3.3.6、添加文件至忽略列表\n\n一般我们总会有些文件无需纳入git的管理,也不希望它们总出现在未跟踪文件列表.通常都是些自动生成的文件,比如日志文件,或者编译过程中创建的临时文件等.在这种情况下,我们可以在工作目录中创建一个名为.gitignore的文件(文件名称固定),列出要忽略的文件模式.下面是一个示例:\n\n在.gitignore文件中写上不需要git管理的文件,表示不需要管理所有的.a的文件.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%A4%BA%E4%BE%8B.png)\n\n实际操作:\n\n首先从这个工作目录下打开git bash\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/3.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/4.png)\n\n这里git add有两种方法:(1)git add 文件名;(2)git add' .表示所有add(这里习惯用这种)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/5.png)\n\n修改文件\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/6.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/7.png)\n\n### 3.4、分支\n\n几乎所有的版本控制系统都以某种形式支持分支.使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的bug修改,开发新的功能,以免影响开发主线.\n\n#### 3.4.1、查看本地分支\n\n* 命令:git branch\n\n#### 3.4.2、创建本地分支\n\n* 命令:git branch 分支名\n\n#### 3.4.3、切换分支(checkout)\n\n* 命令:git checkout 分支名\n\n  我们还可以直接切换到一个不存在的分支(创建并切换)\n\n* 命令:git checkout -b 分支名\n\n#### 3.4.4、合并分支(merge)\n\n一个分支上的提交可以合并到另一个分支\n\n命令:git merge 分支名称\n\n合并的快进模式:\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%90%88%E5%B9%B6%E7%9A%84%E5%BF%AB%E8%BF%9B%E6%A8%A1%E5%BC%8F.png)\n\n#### 3.4.5、删除分支\n\n不能删除当前分支,只能删除其他分支\n\ngit branch -d b1 删除分支时,需要做各种检查\n\ngit branch -D b1 不做任何检查,强制删除\n\n#### 3.4.6、解决冲突\n\n当两个分支上对文件的修改可能会存在冲突,例如同时修改了同一个文件的同一行,这时就需要手动解决冲突,解决冲突步骤如下:\n\n1. 处理文件中冲突的地方\n2. 将解决完冲突的文件加入暂存区(add)\n3. 提交到仓库(commit)\n\n冲突部分的内容处理如下所示:\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%86%B2%E7%AA%81.png)\n\n#### 3.4.7、开发中分支使用原则与流程\n\n几乎所有的版本控制系统都是以某种形式支持分支.使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的bug修改,开发新的功能,以免影响开发主线.\n\n在开发中,一般有如下分支使用原则与流程:\n\n* master(生产)分支\n\n  线上分支,主分支,中小规模项目作为线上运行的应用对应的分支;\n\n* develop(开发)分支\n\n  是从master创建的分支,一般作为开发部门的主要开发分支,如果没有其他并行开发不同期上线要求,都可以在此版本进行开发,阶段开发完成后,需要是合并到master分支,准备上线.\n\n* feature/xxxx分支\n\n  从develop创建的分支.一般是同期并发开发,但不同期上线时创建的分支,分支上的研发任务完成后合并到develop分支.\n\n* hotfix/xxxx分支\n\n  从master派生的分支,一般作为线上bug修复使用,修复完成后需要合并到master,test,develop分支.\n\n* 还有一些其他分支,在此不再详述,例如test分支(用于代码测试),pre分支(预上线分支)等等.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%BC%80%E5%8F%91%E4%B8%AD%E5%88%86%E6%94%AF%E7%9A%84%E5%8E%9F%E5%88%99.png)\n\n## 4、Git远程仓库\n\n### 4.1、常用的托管服务[远程仓库]\n\n```选择语言\n前面我们已经知道了Git中存在两种类型的仓库,即本地仓库和远程仓库.那么我么如何搭建Git远程仓库呢?我们可以借助互联网上提供的一些代码托管来实现,其中比较常见的有GitHub,码云,GitLab等.\nGitHub(地址:https://github.com/)是一个面向开源及私有软件项目的托管平台,因为只支持git作为唯一的版本库格式进行托管,故名GitHub\n码云(地址:https://gitee.com/)是国内的一个代码托管平台,由于服务器在国内,所以相比于GitHub,码云速度会更快.\ngitlab(地址:https://about.gitlab.com/)是一个用于仓库管理系统的开源项目,使用git作为代码管理工具,并在此基础上搭建起来的web服务,一般用于企业,学校等内部网络搭建git私服.\n```\n\n### 4.2、注册码云\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B3%A8%E5%86%8C%E7%A0%81%E4%BA%91.png)\n\n### 4.3、创建远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%931.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%932.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%933.png)\n\n### 4.4、配置SSH公钥\n\n* 生成SSH公钥\n\n  ssh-keygen-t rsa\n\n  不断回车\n\n  ​\t如果公钥已经存在,则自动覆盖\n\n* Gitee设置账户共公钥\n\n  获取公钥\n\n  ​\tcat ~/.ssh/id_rsa.pub\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%AC%E9%92%A5.png)\n\n* 验证是否配成功\n\n  ssh-T git@gitee.com\n\n后面回答yes即可\n\n### 4.5、操作远程仓库\n\n#### 4.5.1、添加远程仓库\n\n此操作是先初始化本地库,然后与已创建的远程库进行对接\n\n* 命令:git remote add <远端名称> <仓库路径>\n\n  远端名称,默认是origin,取决于远端服务器设置\n\n  仓库路径,从远端服务器获取此url\n\n  例如:git remote add origin git@gitee.com:czbk_zhang_meng/git_test.git\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n#### 4.5.2、查看远程仓库\n\n* 命令:git remote\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n####  4.5.3、推送到远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n* 命令:git push [-f] [--set-upstream] [远端名称[本地分支名] [:远端分支名]]\n\n  如果远程分支名和本地分支名称相同,则可以只写本地分支\n\n  git push origin master\n\n  -f表示强制覆盖\n\n  --set-upstream推送到远端的同时并且建立起和远端分支的关联关系\n\n  git push --set-upstream origin master\n\n  如果当前分支已经和远端分支关联,则可以省略分支名和远端名\n\n  git push将master分支推送到已关联的远端分支.\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%812.png)\n\n验证是否推上去\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E8%AF%A2%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n#### 4.5.4、本地分支与远程分支的关联关系\n\n* 查看关联关系我们可以使用git branch -vv命令\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E7%9C%8B%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB.png)\n\n#### 4.5.5、从远程仓库克隆\n\n如果已经有一个远端仓库,我们可以直接clone到本地\n\n* 命令:git clone <仓库名称> [本地目录]\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%86.png)\n\n本地目录可以省略,会自动生成一个目录(也就是以.git前面的git_test生成一个本地仓库的目录)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%861.png)\n\n对于同一个仓库,一般只克隆一次\n\n#### 4.5.6、从远程仓库中抓取和拉取\n\n远程分支和本地分支一样,我们可以进行merge操作,只是需要先把远程仓库里的更新都下载到本地,在进行操作.\n\n* 抓取命令:git fetch [remote name] [branch name]\n\n  抓取指令就是将仓库里的更新都抓取到本地,不会进行合并\n\n  如果不指定远端名称和分支名,则抓取所有分支\n\n* 拉取命令:git pull [remote name] [branch name]\n\n  拉去指令就是将远端仓库的修改拉到本地并自动进行合并,等同于fetch+merge\n\n  如果不指定远端名称和分支名,则抓取所有并更新当前分支.\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%81.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8B%89%E5%8F%96.png)\n\n注意:\n\n退出vi编辑器要按esc,然后再输入:wq即退出了\n\n#### 4.5.7、解决合并冲突\n\n在一段时间,A,B用户修改了同一个文件,且修改了同一行位置的代码,此时会发生合并冲突.\n\nA用户在本地修改代码后优先推送到远程仓库,此时B用户再本地修订代码,提交到本地仓库后,也需要推送到远程仓库,此时B用户晚于A用户,故需要先拉取远程仓库的提交,经过合并后才能推送到远端分支,如下图所示.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B3%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81.png)\n\n再B用户拉取代码时,因为A,B用户同一段时间修改了同一个文件的相同位置的代码,故会发生合并冲突.\n\n远程分支也是分支,所有合并冲突的解决方式也和解决本地冲突的方式相同.\n\n练习:\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%BB%83%E4%B9%A01.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%BB%83%E4%B9%A02.png)\n\n## 5、在Idea中使用Git\n\n### 5.1、在Idea中配置Git\n\n安装好Intellij IDEA后,如果Git安装在默认路径下,那么idea会自动找到git的位置,如果更改了Git的安装位置则需要手动配置Git的路劲,选择File->Settings打开设置窗口,找到Version Control下的git选项:\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea2.png)\n\n### 5.2、在Idea中操作Git\n\n场景:本地已经有一个项目,但是并不是git项目,我们需要将这个放到码云的仓库里,和其他开发人员继续一起协作开发.\n\n#### 5.2.1、创建项目远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%931.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%932.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA2.png)\n\n#### 5.2.2、初始化本地仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png)\n\n#### 5.2.3、设置远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE3.png)\n\n#### 5.2.4、提交到本地仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A41.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A42.png)\n\n#### 5.2.5、推送到远程仓库\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A43.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A44.png)\n\n在接下来的完成修改之后也是这样推送到远程仓库,只是和第一次有一些不一样\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%87%8D%E6%8E%A81.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%87%8D%E6%8E%A82.png)\n\n#### 5.2.6、克隆远程仓库到本地\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8611.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8622.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8633.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8644.png)\n\n当两个开发在同一文件的统一代码上进行修改时,当第一个完成的能够push上去,后面的这个人就需要先pull一下,merge之后才能推.\n\n这里演示第二个人要怎么操作解决冲突\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B31.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B32.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B33.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B34.png)\n\n解决好冲突代码之后要把红色报错部分改成蓝色,所以右击红色文件\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B35.png)\n\n最后commit然后push上去\n\n#### 5.2.7、创建分支\n\n* 最常规的方式\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF1.png)\n\n* 最强大的方式\n\n  ![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF3.png)\n\n#### 5.2.8、切换分支及其他分支相关的操作\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF4.png)\n\n#### 5.2.9、解决冲突\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81.png)\n\n### 5.3、IDEA常用GIT操作入口\n\n1.第一张图上的快捷入口可以基于满足开发的需求\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea%E6%93%8D%E4%BD%9C.png)\n\n2.第二张图是更多在IDEA操作git的入口\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea%E6%93%8D%E4%BD%9C1.png)\n\n### 5.4、场景分析\n\n基于我们后面的实战模拟,我们做一个综合练习\n\n当前的开发环境如下,我们每个人都对这个项目已经开发一段时间,接下来我们要切换成团队开发模式.\n\n也就是我们由一个团队来完成这个项目实战的内容.团队由组长和若干组员组成(组长就是开发中的项目经理).所有操作在idea中完成.\n\n来呢西场景如下:\n\n1.由组长,基于本项目创建本地仓库;创建远程仓库,推送项目到远程仓库.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF1.png)\n\n2.每一位组员从远程仓库克隆项目到idea中,这样每位同学在自己的电脑上就有了一个工作副本,可以证实的开始开发了.我们模拟两个组员(组员A,组员B),克隆两个工作区.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF2.png)\n\n3.组员A修改工作区,提交到本地仓库,再推送到远程仓库.组员B可以直接从远程仓库获取最新的代码.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF3.png)\n\n4.组员A和组员B修改了同一个文件的同一行,提交到本地没有问题,但是推送到远程仓库时,后一个推送操作就会失败.\n\n解决方法:需要先获取远程仓库的代码到本地仓库,编辑冲突,提交并推送代码.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF4.png)\n\n## 附:几条铁令\n\n1.切换分支前先提交本地的修改\n\n2.代码及时提交,提交过了就不会丢\n\n3.遇到任何问题都不要删除文件目录\n\n## 附:疑难问题解决\n\n1.windows下看不到隐藏文件(.bashrc)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.png)\n\n## 附:IDEA集成GitBash作为Terminal\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/terminal.png)\n\n## git常用指令速查\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%80%9F%E6%9F%A5png.png)\n\n\n\n\n\n\n\n","slug":"Git/Git分布式版本控制工具","published":1,"updated":"2022-08-03T03:26:17.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6d22sjb0001lovm5ckbcpmv","content":"<h1 id=\"Git分布式版本控制工具\"><a href=\"#Git分布式版本控制工具\" class=\"headerlink\" title=\"Git分布式版本控制工具\"></a>Git分布式版本控制工具</h1><h2 id=\"1、目标\"><a href=\"#1、目标\" class=\"headerlink\" title=\"1、目标\"></a>1、目标</h2><ul>\n<li>了解Git基本概念</li>\n<li>能够概述Git工作流程</li>\n<li>能够使用Git常用命令</li>\n<li>熟悉Git代码托管服务</li>\n<li>能够使用idea操作Git</li>\n</ul>\n<h2 id=\"2、概述\"><a href=\"#2、概述\" class=\"headerlink\" title=\"2、概述\"></a>2、概述</h2><h3 id=\"2-1、开发中的实际场景\"><a href=\"#2-1、开发中的实际场景\" class=\"headerlink\" title=\"2.1、开发中的实际场景\"></a>2.1、开发中的实际场景</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">场景一:备份</span><br><span class=\"line\">\t小明负责的模块就要完成了,就在即将release之前的一瞬间,电脑突然蓝屏,硬盘光荣牺牲!几个月来的努力付之东流.</span><br><span class=\"line\">场景二:代码还原</span><br><span class=\"line\">\t这个项目需要一个很复杂的功能,老王摸索了一个星期终于有了眉目,可是这被改得面目全非的代码已经回不来到从前了.什么地方能买到哆啦A梦的时光机啊?</span><br><span class=\"line\">场景三:协同开发</span><br><span class=\"line\">\t小刚和小强先后从文件服务器上下载了同一个文件:Analysis.java,小刚在Analysis.java文件中的第30行声明了一个方法,叫count(),先保存到了文件服务器上;小强在Analysis.Java文件中的第50行声明了一个方法,叫sum(),也随后保存到了文件服务器上,于是,count()方法就只存在于小刚的记忆中了</span><br><span class=\"line\">场景四:追溯问题代码的编写人和编写时间</span><br><span class=\"line\">\t老王是另一位项目经理,每次因为项目进度挨骂之后,他都不知道该扣那个程序员的工资!就拿这次来说吧,有个Bug调试了30多个小时才知道是因为相关属性没有在应用初始化时赋值!可是二胖,王东,刘流和正经牛都不承认是自己干的!</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2、版本控制的方式\"><a href=\"#2-2、版本控制的方式\" class=\"headerlink\" title=\"2.2、版本控制的方式\"></a>2.2、版本控制的方式</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.集中式版本控制工具</span><br><span class=\"line\">\t集中式版本控制工具,版本库是集中存放在中央服务器的,team里每个人work时从服务器下载代码,是必须联网才能工作,局域网或互联网.个人修改然后提交到中央版本库.</span><br><span class=\"line\">\t举例:SVN和CVS</span><br><span class=\"line\">2.分布式版本控制工具</span><br><span class=\"line\">\t分布式版本控制系统没有&quot;中央服务器&quot;,每个人的电脑上都是一个完整的版本库,这样工作的时候,无需要联网了,因为版本库就在自己的电脑上.多人协作只需要各自修改推送给对方,就能互相看到对方的修改了.</span><br><span class=\"line\">\t举例:Git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3、SVN\"><a href=\"#2-3、SVN\" class=\"headerlink\" title=\"2.3、SVN\"></a>2.3、SVN</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/svn.png\"></p>\n<h3 id=\"2-4、Git\"><a href=\"#2-4、Git\" class=\"headerlink\" title=\"2.4、Git\"></a>2.4、Git</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git是分布式的,git不需要有中心服务器,我们每台电脑拥有的东西都是一样的.我们使用git并且有个中心服务器,仅仅是为了方便交换大家 的修改,但是这个服务器的地位和我们每个人夫人pc是一样的.我们可把他当作一个开发者的pc就可以,就是为了大家代码容易交流不关机用的.没有它大家一样可以工作,只不过&quot;交换&quot;修改不方便而已.</span><br><span class=\"line\">git是一个开源的分布式版本控制工具,可以是有效,高速地处理从很小到非常大的项目版本管理.git是Linus Torvalds 为了帮助管理 Linux内核开发而开发的一个开放源码的版本控制软件.</span><br><span class=\"line\">同生活中的许多伟大的事物一样,git诞生于一个极富纷争大举创新的年代.Linux内核开源项目有着为数众多的参与者.绝大多数的Linux内核维护工作都花在了提交补丁和保存归档的繁琐事务上(1991-2002年间).到2002年,整个项目组开始启用一个专有的分布式版本控制系统BitKeeper来管理和维护代码.</span><br><span class=\"line\">到了2005年,开发BitKeeper的商业公司同Linux内核开源社区的合作关系结束,他们收回了Linux内核社区免费使用BitKeeper的权利.这就迫使Linux开源社区(也别是Linux的缔造者Linus Torvalds)基于使用BitKeeper时的经验教训,开发出自己的版本系统.她们对新的系统制定了若干目标:</span><br><span class=\"line\">速度</span><br><span class=\"line\">简单的设计</span><br><span class=\"line\">对非线性开发模式的强大支持(允许成千上万个并行开发的分支)</span><br><span class=\"line\">完全分布式</span><br><span class=\"line\">有能力高效管理类似Linux内核一样的超大规模项目(速度和数据量)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/git.png\"></p>\n<h3 id=\"2-5、Git工作流程图\"><a href=\"#2-5、Git工作流程图\" class=\"headerlink\" title=\"2.5、Git工作流程图\"></a>2.5、Git工作流程图</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%9B%BE.png\"></p>\n<p>命令如下:</p>\n<ol>\n<li>clone(克隆):从远程仓库中克隆代码到本地仓库</li>\n<li>checkout(检出):从本地仓库中检出一个仓库分支然后进行修订</li>\n<li>add(添加):在提交前先将代码提交到暂存区</li>\n<li>commit(提交):提交到本地仓库.本地仓库中保存修改的各个历史版本</li>\n<li>fetch(抓取):从远程库,抓取到本地仓库,不进行任何的合并动作,一般操作比较少.</li>\n<li>pull(拉取):从远程库拉到本地库,自动进行合并(merge),然后放到工作区,相当于fetch+merge</li>\n<li>push(推送):修改完成后,需要和团队成员共享代码时,将代码推送到远程仓库</li>\n</ol>\n<h2 id=\"3、Git安装与常用命令\"><a href=\"#3、Git安装与常用命令\" class=\"headerlink\" title=\"3、Git安装与常用命令\"></a>3、Git安装与常用命令</h2><p>本教程里的git命令例子都是在Git Bash中演示的,会用到一些基本的Linux命令,在此为大家提前列举:</p>\n<ul>\n<li>ls/ll    查看当前目录</li>\n<li>cat    查看文件内容</li>\n<li>touch 创建文件</li>\n<li>vi     vi编辑器(使用vi编辑器是为了方便展示效果,学员可以记事本,editPlus,notPad++等其他编辑器)</li>\n</ul>\n<h3 id=\"3-1、Git环境配置\"><a href=\"#3-1、Git环境配置\" class=\"headerlink\" title=\"3.1、Git环境配置\"></a>3.1、Git环境配置</h3><h4 id=\"3-1-1-下载与安装\"><a href=\"#3-1-1-下载与安装\" class=\"headerlink\" title=\"3.1.1 下载与安装\"></a>3.1.1 下载与安装</h4><p>下载地址:<a href=\"https://git-scm.com/download\">https://git-scm.com/download</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/dowanload.png\"></p>\n<p>下载完成后可以得到如下安装文件:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/exe.png\"></p>\n<p>双击下载的安装文件来安装git,安装完成后在电脑桌面(也可以是其他目录)点击右键,如果能够看到如下两个菜单则说明git安装成功.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%88%90%E5%8A%9F.png\"></p>\n<p>备注:</p>\n<p>​    Git GUI:Git提供的图形界面工具</p>\n<p>​    Git Bash:Git提供的命令行工具</p>\n<p>​    当安装Git后首先要做的事情是设置用户名称和email地址.这是非常重要的,因为每次Git提交都会使用该用户信息</p>\n<h4 id=\"3-1-2-基本配置\"><a href=\"#3-1-2-基本配置\" class=\"headerlink\" title=\"3.1.2 基本配置\"></a>3.1.2 基本配置</h4><ol>\n<li><p>打开Git Bash</p>\n</li>\n<li><p>设置用户信息</p>\n<p>git config –global user.name “itcast”</p>\n<p>git config –global user.email “<a href=\"mailto:&#104;&#x65;&#108;&#108;&#111;&#64;&#x69;&#116;&#x63;&#97;&#115;&#116;&#46;&#99;&#110;\">&#104;&#x65;&#108;&#108;&#111;&#64;&#x69;&#116;&#x63;&#97;&#115;&#116;&#46;&#99;&#110;</a>“</p>\n</li>\n<li><p>查看配置信息</p>\n<p>git config –global user.name</p>\n<p>git config –global user.email</p>\n</li>\n</ol>\n<h4 id=\"3-1-3为常用指令配置别名-可选\"><a href=\"#3-1-3为常用指令配置别名-可选\" class=\"headerlink\" title=\"3.1.3为常用指令配置别名(可选)\"></a>3.1.3为常用指令配置别名(可选)</h4><p>有些常用的指令参数非常多,每次都要输入好多参数,我们可以使用别名.</p>\n<ol>\n<li><p>打开用户目录,创建.bashrc文件</p>\n<p>部分windows系统不允许用户创建点号开头的文件,可以打开gitBash,执行 touch ~/.bashrc</p>\n<p>~表示当前目录的根目录</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/bashrc.png\"></p>\n<ol start=\"2\">\n<li><p>在.bashrc文件中输入如下内容:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">用于输出git提交日志</span></span><br><span class=\"line\">alias git-log=&#x27;git log --pretty=oneline --all --graph --abbrev-commit&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">用于输出当前目录所有文件及基本信息</span></span><br><span class=\"line\">alias ll=&#x27;ls -al&#x27;</span><br></pre></td></tr></table></figure></li>\n<li><p>打开gitBash,执行source ~/.bashrc</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/souce.png\"></p>\n<h4 id=\"3-1-4-解决GitBash乱码问题\"><a href=\"#3-1-4-解决GitBash乱码问题\" class=\"headerlink\" title=\"3.1.4 解决GitBash乱码问题\"></a>3.1.4 解决GitBash乱码问题</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E4%B9%B1%E7%A0%81%E8%AE%BE%E7%BD%AE.png\"></p>\n<h3 id=\"3-2、获取本地仓库\"><a href=\"#3-2、获取本地仓库\" class=\"headerlink\" title=\"3.2、获取本地仓库\"></a>3.2、获取本地仓库</h3><p>要使用Git对我们的代码进行版本控制,首先需要获得本地仓库</p>\n<p>(1)在电脑的任意位置创建一个空目录(例如test)作为我们的本地Git仓库</p>\n<p>(2)进入这个目录中,点击右键打开Git bash窗口</p>\n<p>(3)执行命令git init</p>\n<p>(4)如果创建成功后可在文件夹下看到隐藏的.git目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png\"></p>\n<h3 id=\"3-3、基础操作指令\"><a href=\"#3-3、基础操作指令\" class=\"headerlink\" title=\"3.3、基础操作指令\"></a>3.3、基础操作指令</h3><p>Git工作目录(除了.git文件外的目录叫做工作目录)下对于文件的修改(增加,删除,更新)会存在几个状态,这些修改的状态会随着我们执行Git命令而发生变化.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E6%8C%87%E4%BB%A4.png\"></p>\n<p>本章节主要讲解如何使用命令来控制状态之间的转换:</p>\n<ol>\n<li>git add (工作区–&gt;暂存区)</li>\n<li>git commit (暂存区–&gt;本地仓库)</li>\n</ol>\n<h4 id=\"3-3-1、查看修改的状态-status\"><a href=\"#3-3-1、查看修改的状态-status\" class=\"headerlink\" title=\"3.3.1、查看修改的状态(status)\"></a>3.3.1、查看修改的状态(status)</h4><ul>\n<li>作用:查看的修改的状态(暂存区、工作区)</li>\n<li>命令形式:git status</li>\n</ul>\n<h4 id=\"3-3-2、添加工作区到暂存区-add\"><a href=\"#3-3-2、添加工作区到暂存区-add\" class=\"headerlink\" title=\"3.3.2、添加工作区到暂存区(add)\"></a>3.3.2、添加工作区到暂存区(add)</h4><ul>\n<li><p>作用:添加工作区一个或多个文件的修改到暂存区</p>\n</li>\n<li><p>命令形式:git add 单个文件名|通配符</p>\n<p>将所有修改加入暂存区:git add .(.表示所有)</p>\n</li>\n</ul>\n<h4 id=\"3-3-3、提交暂存区到本地仓库-commit\"><a href=\"#3-3-3、提交暂存区到本地仓库-commit\" class=\"headerlink\" title=\"3.3.3、提交暂存区到本地仓库(commit)\"></a>3.3.3、提交暂存区到本地仓库(commit)</h4><ul>\n<li>作用:提交暂存区内容到本地仓库的当前分支</li>\n<li>命令形式:git commit -m ‘注释内容’</li>\n</ul>\n<h4 id=\"3-3-4、查看提交日志-log\"><a href=\"#3-3-4、查看提交日志-log\" class=\"headerlink\" title=\"3.3.4、查看提交日志(log)\"></a>3.3.4、查看提交日志(log)</h4><p>在3.1.3中配置的别名git-log就包含了这些参数,所以后续可以直接使用指令git-log</p>\n<ul>\n<li><p>作用:查看提交记录</p>\n</li>\n<li><p>命令形式:git log [option]</p>\n<p>options</p>\n<p>​    –all 显示所有分支</p>\n<p>​    –pretty=oneline 将提交信息显示为一行</p>\n<p>​    –abbrev-commit 使得输出得commitld更简短</p>\n<p>​    –graph 以图得形式显示</p>\n</li>\n</ul>\n<h4 id=\"3-3-5、版本回退\"><a href=\"#3-3-5、版本回退\" class=\"headerlink\" title=\"3.3.5、版本回退\"></a>3.3.5、版本回退</h4><ul>\n<li><p>作用:版本切换</p>\n</li>\n<li><p>命令形式:git reset –hard commitID</p>\n<p>commitID可以使用git-log或git log指令查看</p>\n</li>\n<li><p>如何查看已经删除得记录?</p>\n<p>git reflog(把所有的版本操作都记录下来了)</p>\n<p>这个指令可以看到已经删除的提交记录</p>\n<p>注意:</p>\n<p>这里选中即表示已经复制(不需要用CTRL C因为它在Linux中有其他的设置)</p>\n<p>选中之后即表示已经复制好,那么粘贴也不要使用ctrl+v,直接按一下滚轮,或者使用右键,选中粘贴也行.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80.png\"></p>\n</li>\n</ul>\n<h4 id=\"3-3-6、添加文件至忽略列表\"><a href=\"#3-3-6、添加文件至忽略列表\" class=\"headerlink\" title=\"3.3.6、添加文件至忽略列表\"></a>3.3.6、添加文件至忽略列表</h4><p>一般我们总会有些文件无需纳入git的管理,也不希望它们总出现在未跟踪文件列表.通常都是些自动生成的文件,比如日志文件,或者编译过程中创建的临时文件等.在这种情况下,我们可以在工作目录中创建一个名为.gitignore的文件(文件名称固定),列出要忽略的文件模式.下面是一个示例:</p>\n<p>在.gitignore文件中写上不需要git管理的文件,表示不需要管理所有的.a的文件.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%A4%BA%E4%BE%8B.png\"></p>\n<p>实际操作:</p>\n<p>首先从这个工作目录下打开git bash</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/3.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/4.png\"></p>\n<p>这里git add有两种方法:(1)git add 文件名;(2)git add’ .表示所有add(这里习惯用这种)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/5.png\"></p>\n<p>修改文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/6.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/7.png\"></p>\n<h3 id=\"3-4、分支\"><a href=\"#3-4、分支\" class=\"headerlink\" title=\"3.4、分支\"></a>3.4、分支</h3><p>几乎所有的版本控制系统都以某种形式支持分支.使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的bug修改,开发新的功能,以免影响开发主线.</p>\n<h4 id=\"3-4-1、查看本地分支\"><a href=\"#3-4-1、查看本地分支\" class=\"headerlink\" title=\"3.4.1、查看本地分支\"></a>3.4.1、查看本地分支</h4><ul>\n<li>命令:git branch</li>\n</ul>\n<h4 id=\"3-4-2、创建本地分支\"><a href=\"#3-4-2、创建本地分支\" class=\"headerlink\" title=\"3.4.2、创建本地分支\"></a>3.4.2、创建本地分支</h4><ul>\n<li>命令:git branch 分支名</li>\n</ul>\n<h4 id=\"3-4-3、切换分支-checkout\"><a href=\"#3-4-3、切换分支-checkout\" class=\"headerlink\" title=\"3.4.3、切换分支(checkout)\"></a>3.4.3、切换分支(checkout)</h4><ul>\n<li><p>命令:git checkout 分支名</p>\n<p>我们还可以直接切换到一个不存在的分支(创建并切换)</p>\n</li>\n<li><p>命令:git checkout -b 分支名</p>\n</li>\n</ul>\n<h4 id=\"3-4-4、合并分支-merge\"><a href=\"#3-4-4、合并分支-merge\" class=\"headerlink\" title=\"3.4.4、合并分支(merge)\"></a>3.4.4、合并分支(merge)</h4><p>一个分支上的提交可以合并到另一个分支</p>\n<p>命令:git merge 分支名称</p>\n<p>合并的快进模式:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%90%88%E5%B9%B6%E7%9A%84%E5%BF%AB%E8%BF%9B%E6%A8%A1%E5%BC%8F.png\"></p>\n<h4 id=\"3-4-5、删除分支\"><a href=\"#3-4-5、删除分支\" class=\"headerlink\" title=\"3.4.5、删除分支\"></a>3.4.5、删除分支</h4><p>不能删除当前分支,只能删除其他分支</p>\n<p>git branch -d b1 删除分支时,需要做各种检查</p>\n<p>git branch -D b1 不做任何检查,强制删除</p>\n<h4 id=\"3-4-6、解决冲突\"><a href=\"#3-4-6、解决冲突\" class=\"headerlink\" title=\"3.4.6、解决冲突\"></a>3.4.6、解决冲突</h4><p>当两个分支上对文件的修改可能会存在冲突,例如同时修改了同一个文件的同一行,这时就需要手动解决冲突,解决冲突步骤如下:</p>\n<ol>\n<li>处理文件中冲突的地方</li>\n<li>将解决完冲突的文件加入暂存区(add)</li>\n<li>提交到仓库(commit)</li>\n</ol>\n<p>冲突部分的内容处理如下所示:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%86%B2%E7%AA%81.png\"></p>\n<h4 id=\"3-4-7、开发中分支使用原则与流程\"><a href=\"#3-4-7、开发中分支使用原则与流程\" class=\"headerlink\" title=\"3.4.7、开发中分支使用原则与流程\"></a>3.4.7、开发中分支使用原则与流程</h4><p>几乎所有的版本控制系统都是以某种形式支持分支.使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的bug修改,开发新的功能,以免影响开发主线.</p>\n<p>在开发中,一般有如下分支使用原则与流程:</p>\n<ul>\n<li><p>master(生产)分支</p>\n<p>线上分支,主分支,中小规模项目作为线上运行的应用对应的分支;</p>\n</li>\n<li><p>develop(开发)分支</p>\n<p>是从master创建的分支,一般作为开发部门的主要开发分支,如果没有其他并行开发不同期上线要求,都可以在此版本进行开发,阶段开发完成后,需要是合并到master分支,准备上线.</p>\n</li>\n<li><p>feature/xxxx分支</p>\n<p>从develop创建的分支.一般是同期并发开发,但不同期上线时创建的分支,分支上的研发任务完成后合并到develop分支.</p>\n</li>\n<li><p>hotfix/xxxx分支</p>\n<p>从master派生的分支,一般作为线上bug修复使用,修复完成后需要合并到master,test,develop分支.</p>\n</li>\n<li><p>还有一些其他分支,在此不再详述,例如test分支(用于代码测试),pre分支(预上线分支)等等.</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%BC%80%E5%8F%91%E4%B8%AD%E5%88%86%E6%94%AF%E7%9A%84%E5%8E%9F%E5%88%99.png\"></p>\n<h2 id=\"4、Git远程仓库\"><a href=\"#4、Git远程仓库\" class=\"headerlink\" title=\"4、Git远程仓库\"></a>4、Git远程仓库</h2><h3 id=\"4-1、常用的托管服务-远程仓库\"><a href=\"#4-1、常用的托管服务-远程仓库\" class=\"headerlink\" title=\"4.1、常用的托管服务[远程仓库]\"></a>4.1、常用的托管服务[远程仓库]</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前面我们已经知道了Git中存在两种类型的仓库,即本地仓库和远程仓库.那么我么如何搭建Git远程仓库呢?我们可以借助互联网上提供的一些代码托管来实现,其中比较常见的有GitHub,码云,GitLab等.</span><br><span class=\"line\">GitHub(地址:https://github.com/)是一个面向开源及私有软件项目的托管平台,因为只支持git作为唯一的版本库格式进行托管,故名GitHub</span><br><span class=\"line\">码云(地址:https://gitee.com/)是国内的一个代码托管平台,由于服务器在国内,所以相比于GitHub,码云速度会更快.</span><br><span class=\"line\">gitlab(地址:https://about.gitlab.com/)是一个用于仓库管理系统的开源项目,使用git作为代码管理工具,并在此基础上搭建起来的web服务,一般用于企业,学校等内部网络搭建git私服.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2、注册码云\"><a href=\"#4-2、注册码云\" class=\"headerlink\" title=\"4.2、注册码云\"></a>4.2、注册码云</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B3%A8%E5%86%8C%E7%A0%81%E4%BA%91.png\"></p>\n<h3 id=\"4-3、创建远程仓库\"><a href=\"#4-3、创建远程仓库\" class=\"headerlink\" title=\"4.3、创建远程仓库\"></a>4.3、创建远程仓库</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%931.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%932.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%933.png\"></p>\n<h3 id=\"4-4、配置SSH公钥\"><a href=\"#4-4、配置SSH公钥\" class=\"headerlink\" title=\"4.4、配置SSH公钥\"></a>4.4、配置SSH公钥</h3><ul>\n<li><p>生成SSH公钥</p>\n<p>ssh-keygen-t rsa</p>\n<p>不断回车</p>\n<p>​    如果公钥已经存在,则自动覆盖</p>\n</li>\n<li><p>Gitee设置账户共公钥</p>\n<p>获取公钥</p>\n<p>​    cat ~/.ssh/id_rsa.pub</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%AC%E9%92%A5.png\"></p>\n</li>\n<li><p>验证是否配成功</p>\n<p>ssh-T <a href=\"mailto:&#x67;&#105;&#x74;&#64;&#x67;&#105;&#116;&#101;&#x65;&#46;&#99;&#x6f;&#109;\">&#x67;&#105;&#x74;&#64;&#x67;&#105;&#116;&#101;&#x65;&#46;&#99;&#x6f;&#109;</a></p>\n</li>\n</ul>\n<p>后面回答yes即可</p>\n<h3 id=\"4-5、操作远程仓库\"><a href=\"#4-5、操作远程仓库\" class=\"headerlink\" title=\"4.5、操作远程仓库\"></a>4.5、操作远程仓库</h3><h4 id=\"4-5-1、添加远程仓库\"><a href=\"#4-5-1、添加远程仓库\" class=\"headerlink\" title=\"4.5.1、添加远程仓库\"></a>4.5.1、添加远程仓库</h4><p>此操作是先初始化本地库,然后与已创建的远程库进行对接</p>\n<ul>\n<li><p>命令:git remote add &lt;远端名称&gt; &lt;仓库路径&gt;</p>\n<p>远端名称,默认是origin,取决于远端服务器设置</p>\n<p>仓库路径,从远端服务器获取此url</p>\n<p>例如:git remote add origin <a href=\"mailto:&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#x65;&#x65;&#x2e;&#99;&#111;&#109;\">&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#x65;&#x65;&#x2e;&#99;&#111;&#109;</a>:czbk_zhang_meng/git_test.git</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n</li>\n</ul>\n<h4 id=\"4-5-2、查看远程仓库\"><a href=\"#4-5-2、查看远程仓库\" class=\"headerlink\" title=\"4.5.2、查看远程仓库\"></a>4.5.2、查看远程仓库</h4><ul>\n<li><p>命令:git remote</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n</li>\n</ul>\n<h4 id=\"4-5-3、推送到远程仓库\"><a href=\"#4-5-3、推送到远程仓库\" class=\"headerlink\" title=\"4.5.3、推送到远程仓库\"></a>4.5.3、推送到远程仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n<ul>\n<li><p>命令:git push [-f] [–set-upstream] [远端名称[本地分支名] [:远端分支名]]</p>\n<p>如果远程分支名和本地分支名称相同,则可以只写本地分支</p>\n<p>git push origin master</p>\n<p>-f表示强制覆盖</p>\n<p>–set-upstream推送到远端的同时并且建立起和远端分支的关联关系</p>\n<p>git push –set-upstream origin master</p>\n<p>如果当前分支已经和远端分支关联,则可以省略分支名和远端名</p>\n<p>git push将master分支推送到已关联的远端分支.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%812.png\"></p>\n</li>\n</ul>\n<p>验证是否推上去</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E8%AF%A2%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n<h4 id=\"4-5-4、本地分支与远程分支的关联关系\"><a href=\"#4-5-4、本地分支与远程分支的关联关系\" class=\"headerlink\" title=\"4.5.4、本地分支与远程分支的关联关系\"></a>4.5.4、本地分支与远程分支的关联关系</h4><ul>\n<li><p>查看关联关系我们可以使用git branch -vv命令</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E7%9C%8B%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB.png\"></p>\n</li>\n</ul>\n<h4 id=\"4-5-5、从远程仓库克隆\"><a href=\"#4-5-5、从远程仓库克隆\" class=\"headerlink\" title=\"4.5.5、从远程仓库克隆\"></a>4.5.5、从远程仓库克隆</h4><p>如果已经有一个远端仓库,我们可以直接clone到本地</p>\n<ul>\n<li><p>命令:git clone &lt;仓库名称&gt; [本地目录]</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%86.png\"></p>\n</li>\n</ul>\n<p>本地目录可以省略,会自动生成一个目录(也就是以.git前面的git_test生成一个本地仓库的目录)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%861.png\"></p>\n<p>对于同一个仓库,一般只克隆一次</p>\n<h4 id=\"4-5-6、从远程仓库中抓取和拉取\"><a href=\"#4-5-6、从远程仓库中抓取和拉取\" class=\"headerlink\" title=\"4.5.6、从远程仓库中抓取和拉取\"></a>4.5.6、从远程仓库中抓取和拉取</h4><p>远程分支和本地分支一样,我们可以进行merge操作,只是需要先把远程仓库里的更新都下载到本地,在进行操作.</p>\n<ul>\n<li><p>抓取命令:git fetch [remote name] [branch name]</p>\n<p>抓取指令就是将仓库里的更新都抓取到本地,不会进行合并</p>\n<p>如果不指定远端名称和分支名,则抓取所有分支</p>\n</li>\n<li><p>拉取命令:git pull [remote name] [branch name]</p>\n<p>拉去指令就是将远端仓库的修改拉到本地并自动进行合并,等同于fetch+merge</p>\n<p>如果不指定远端名称和分支名,则抓取所有并更新当前分支.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%81.png\"></p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8B%89%E5%8F%96.png\"></p>\n<p>注意:</p>\n<p>退出vi编辑器要按esc,然后再输入:wq即退出了</p>\n<h4 id=\"4-5-7、解决合并冲突\"><a href=\"#4-5-7、解决合并冲突\" class=\"headerlink\" title=\"4.5.7、解决合并冲突\"></a>4.5.7、解决合并冲突</h4><p>在一段时间,A,B用户修改了同一个文件,且修改了同一行位置的代码,此时会发生合并冲突.</p>\n<p>A用户在本地修改代码后优先推送到远程仓库,此时B用户再本地修订代码,提交到本地仓库后,也需要推送到远程仓库,此时B用户晚于A用户,故需要先拉取远程仓库的提交,经过合并后才能推送到远端分支,如下图所示.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B3%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81.png\"></p>\n<p>再B用户拉取代码时,因为A,B用户同一段时间修改了同一个文件的相同位置的代码,故会发生合并冲突.</p>\n<p>远程分支也是分支,所有合并冲突的解决方式也和解决本地冲突的方式相同.</p>\n<p>练习:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%BB%83%E4%B9%A01.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%BB%83%E4%B9%A02.png\"></p>\n<h2 id=\"5、在Idea中使用Git\"><a href=\"#5、在Idea中使用Git\" class=\"headerlink\" title=\"5、在Idea中使用Git\"></a>5、在Idea中使用Git</h2><h3 id=\"5-1、在Idea中配置Git\"><a href=\"#5-1、在Idea中配置Git\" class=\"headerlink\" title=\"5.1、在Idea中配置Git\"></a>5.1、在Idea中配置Git</h3><p>安装好Intellij IDEA后,如果Git安装在默认路径下,那么idea会自动找到git的位置,如果更改了Git的安装位置则需要手动配置Git的路劲,选择File-&gt;Settings打开设置窗口,找到Version Control下的git选项:<br><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea2.png\"></p>\n<h3 id=\"5-2、在Idea中操作Git\"><a href=\"#5-2、在Idea中操作Git\" class=\"headerlink\" title=\"5.2、在Idea中操作Git\"></a>5.2、在Idea中操作Git</h3><p>场景:本地已经有一个项目,但是并不是git项目,我们需要将这个放到码云的仓库里,和其他开发人员继续一起协作开发.</p>\n<h4 id=\"5-2-1、创建项目远程仓库\"><a href=\"#5-2-1、创建项目远程仓库\" class=\"headerlink\" title=\"5.2.1、创建项目远程仓库\"></a>5.2.1、创建项目远程仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%931.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%932.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA2.png\"></p>\n<h4 id=\"5-2-2、初始化本地仓库\"><a href=\"#5-2-2、初始化本地仓库\" class=\"headerlink\" title=\"5.2.2、初始化本地仓库\"></a>5.2.2、初始化本地仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png\"></p>\n<h4 id=\"5-2-3、设置远程仓库\"><a href=\"#5-2-3、设置远程仓库\" class=\"headerlink\" title=\"5.2.3、设置远程仓库\"></a>5.2.3、设置远程仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE3.png\"></p>\n<h4 id=\"5-2-4、提交到本地仓库\"><a href=\"#5-2-4、提交到本地仓库\" class=\"headerlink\" title=\"5.2.4、提交到本地仓库\"></a>5.2.4、提交到本地仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A41.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A42.png\"></p>\n<h4 id=\"5-2-5、推送到远程仓库\"><a href=\"#5-2-5、推送到远程仓库\" class=\"headerlink\" title=\"5.2.5、推送到远程仓库\"></a>5.2.5、推送到远程仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A43.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A44.png\"></p>\n<p>在接下来的完成修改之后也是这样推送到远程仓库,只是和第一次有一些不一样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%87%8D%E6%8E%A81.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%87%8D%E6%8E%A82.png\"></p>\n<h4 id=\"5-2-6、克隆远程仓库到本地\"><a href=\"#5-2-6、克隆远程仓库到本地\" class=\"headerlink\" title=\"5.2.6、克隆远程仓库到本地\"></a>5.2.6、克隆远程仓库到本地</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8611.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8622.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8633.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8644.png\"></p>\n<p>当两个开发在同一文件的统一代码上进行修改时,当第一个完成的能够push上去,后面的这个人就需要先pull一下,merge之后才能推.</p>\n<p>这里演示第二个人要怎么操作解决冲突</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B31.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B32.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B33.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B34.png\"></p>\n<p>解决好冲突代码之后要把红色报错部分改成蓝色,所以右击红色文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B35.png\"></p>\n<p>最后commit然后push上去</p>\n<h4 id=\"5-2-7、创建分支\"><a href=\"#5-2-7、创建分支\" class=\"headerlink\" title=\"5.2.7、创建分支\"></a>5.2.7、创建分支</h4><ul>\n<li><p>最常规的方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF1.png\"></p>\n</li>\n<li><p>最强大的方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF2.png\"></p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF3.png\"></p>\n<h4 id=\"5-2-8、切换分支及其他分支相关的操作\"><a href=\"#5-2-8、切换分支及其他分支相关的操作\" class=\"headerlink\" title=\"5.2.8、切换分支及其他分支相关的操作\"></a>5.2.8、切换分支及其他分支相关的操作</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF4.png\"></p>\n<h4 id=\"5-2-9、解决冲突\"><a href=\"#5-2-9、解决冲突\" class=\"headerlink\" title=\"5.2.9、解决冲突\"></a>5.2.9、解决冲突</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81.png\"></p>\n<h3 id=\"5-3、IDEA常用GIT操作入口\"><a href=\"#5-3、IDEA常用GIT操作入口\" class=\"headerlink\" title=\"5.3、IDEA常用GIT操作入口\"></a>5.3、IDEA常用GIT操作入口</h3><p>1.第一张图上的快捷入口可以基于满足开发的需求</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea%E6%93%8D%E4%BD%9C.png\"></p>\n<p>2.第二张图是更多在IDEA操作git的入口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea%E6%93%8D%E4%BD%9C1.png\"></p>\n<h3 id=\"5-4、场景分析\"><a href=\"#5-4、场景分析\" class=\"headerlink\" title=\"5.4、场景分析\"></a>5.4、场景分析</h3><p>基于我们后面的实战模拟,我们做一个综合练习</p>\n<p>当前的开发环境如下,我们每个人都对这个项目已经开发一段时间,接下来我们要切换成团队开发模式.</p>\n<p>也就是我们由一个团队来完成这个项目实战的内容.团队由组长和若干组员组成(组长就是开发中的项目经理).所有操作在idea中完成.</p>\n<p>来呢西场景如下:</p>\n<p>1.由组长,基于本项目创建本地仓库;创建远程仓库,推送项目到远程仓库.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF1.png\"></p>\n<p>2.每一位组员从远程仓库克隆项目到idea中,这样每位同学在自己的电脑上就有了一个工作副本,可以证实的开始开发了.我们模拟两个组员(组员A,组员B),克隆两个工作区.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF2.png\"></p>\n<p>3.组员A修改工作区,提交到本地仓库,再推送到远程仓库.组员B可以直接从远程仓库获取最新的代码.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF3.png\"></p>\n<p>4.组员A和组员B修改了同一个文件的同一行,提交到本地没有问题,但是推送到远程仓库时,后一个推送操作就会失败.</p>\n<p>解决方法:需要先获取远程仓库的代码到本地仓库,编辑冲突,提交并推送代码.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF4.png\"></p>\n<h2 id=\"附-几条铁令\"><a href=\"#附-几条铁令\" class=\"headerlink\" title=\"附:几条铁令\"></a>附:几条铁令</h2><p>1.切换分支前先提交本地的修改</p>\n<p>2.代码及时提交,提交过了就不会丢</p>\n<p>3.遇到任何问题都不要删除文件目录</p>\n<h2 id=\"附-疑难问题解决\"><a href=\"#附-疑难问题解决\" class=\"headerlink\" title=\"附:疑难问题解决\"></a>附:疑难问题解决</h2><p>1.windows下看不到隐藏文件(.bashrc)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.png\"></p>\n<h2 id=\"附-IDEA集成GitBash作为Terminal\"><a href=\"#附-IDEA集成GitBash作为Terminal\" class=\"headerlink\" title=\"附:IDEA集成GitBash作为Terminal\"></a>附:IDEA集成GitBash作为Terminal</h2><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/terminal.png\"></p>\n<h2 id=\"git常用指令速查\"><a href=\"#git常用指令速查\" class=\"headerlink\" title=\"git常用指令速查\"></a>git常用指令速查</h2><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%80%9F%E6%9F%A5png.png\"></p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"excerpt":"","more":"<h1 id=\"Git分布式版本控制工具\"><a href=\"#Git分布式版本控制工具\" class=\"headerlink\" title=\"Git分布式版本控制工具\"></a>Git分布式版本控制工具</h1><h2 id=\"1、目标\"><a href=\"#1、目标\" class=\"headerlink\" title=\"1、目标\"></a>1、目标</h2><ul>\n<li>了解Git基本概念</li>\n<li>能够概述Git工作流程</li>\n<li>能够使用Git常用命令</li>\n<li>熟悉Git代码托管服务</li>\n<li>能够使用idea操作Git</li>\n</ul>\n<h2 id=\"2、概述\"><a href=\"#2、概述\" class=\"headerlink\" title=\"2、概述\"></a>2、概述</h2><h3 id=\"2-1、开发中的实际场景\"><a href=\"#2-1、开发中的实际场景\" class=\"headerlink\" title=\"2.1、开发中的实际场景\"></a>2.1、开发中的实际场景</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">场景一:备份</span><br><span class=\"line\">\t小明负责的模块就要完成了,就在即将release之前的一瞬间,电脑突然蓝屏,硬盘光荣牺牲!几个月来的努力付之东流.</span><br><span class=\"line\">场景二:代码还原</span><br><span class=\"line\">\t这个项目需要一个很复杂的功能,老王摸索了一个星期终于有了眉目,可是这被改得面目全非的代码已经回不来到从前了.什么地方能买到哆啦A梦的时光机啊?</span><br><span class=\"line\">场景三:协同开发</span><br><span class=\"line\">\t小刚和小强先后从文件服务器上下载了同一个文件:Analysis.java,小刚在Analysis.java文件中的第30行声明了一个方法,叫count(),先保存到了文件服务器上;小强在Analysis.Java文件中的第50行声明了一个方法,叫sum(),也随后保存到了文件服务器上,于是,count()方法就只存在于小刚的记忆中了</span><br><span class=\"line\">场景四:追溯问题代码的编写人和编写时间</span><br><span class=\"line\">\t老王是另一位项目经理,每次因为项目进度挨骂之后,他都不知道该扣那个程序员的工资!就拿这次来说吧,有个Bug调试了30多个小时才知道是因为相关属性没有在应用初始化时赋值!可是二胖,王东,刘流和正经牛都不承认是自己干的!</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2、版本控制的方式\"><a href=\"#2-2、版本控制的方式\" class=\"headerlink\" title=\"2.2、版本控制的方式\"></a>2.2、版本控制的方式</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.集中式版本控制工具</span><br><span class=\"line\">\t集中式版本控制工具,版本库是集中存放在中央服务器的,team里每个人work时从服务器下载代码,是必须联网才能工作,局域网或互联网.个人修改然后提交到中央版本库.</span><br><span class=\"line\">\t举例:SVN和CVS</span><br><span class=\"line\">2.分布式版本控制工具</span><br><span class=\"line\">\t分布式版本控制系统没有&quot;中央服务器&quot;,每个人的电脑上都是一个完整的版本库,这样工作的时候,无需要联网了,因为版本库就在自己的电脑上.多人协作只需要各自修改推送给对方,就能互相看到对方的修改了.</span><br><span class=\"line\">\t举例:Git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3、SVN\"><a href=\"#2-3、SVN\" class=\"headerlink\" title=\"2.3、SVN\"></a>2.3、SVN</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/svn.png\"></p>\n<h3 id=\"2-4、Git\"><a href=\"#2-4、Git\" class=\"headerlink\" title=\"2.4、Git\"></a>2.4、Git</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git是分布式的,git不需要有中心服务器,我们每台电脑拥有的东西都是一样的.我们使用git并且有个中心服务器,仅仅是为了方便交换大家 的修改,但是这个服务器的地位和我们每个人夫人pc是一样的.我们可把他当作一个开发者的pc就可以,就是为了大家代码容易交流不关机用的.没有它大家一样可以工作,只不过&quot;交换&quot;修改不方便而已.</span><br><span class=\"line\">git是一个开源的分布式版本控制工具,可以是有效,高速地处理从很小到非常大的项目版本管理.git是Linus Torvalds 为了帮助管理 Linux内核开发而开发的一个开放源码的版本控制软件.</span><br><span class=\"line\">同生活中的许多伟大的事物一样,git诞生于一个极富纷争大举创新的年代.Linux内核开源项目有着为数众多的参与者.绝大多数的Linux内核维护工作都花在了提交补丁和保存归档的繁琐事务上(1991-2002年间).到2002年,整个项目组开始启用一个专有的分布式版本控制系统BitKeeper来管理和维护代码.</span><br><span class=\"line\">到了2005年,开发BitKeeper的商业公司同Linux内核开源社区的合作关系结束,他们收回了Linux内核社区免费使用BitKeeper的权利.这就迫使Linux开源社区(也别是Linux的缔造者Linus Torvalds)基于使用BitKeeper时的经验教训,开发出自己的版本系统.她们对新的系统制定了若干目标:</span><br><span class=\"line\">速度</span><br><span class=\"line\">简单的设计</span><br><span class=\"line\">对非线性开发模式的强大支持(允许成千上万个并行开发的分支)</span><br><span class=\"line\">完全分布式</span><br><span class=\"line\">有能力高效管理类似Linux内核一样的超大规模项目(速度和数据量)</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/git.png\"></p>\n<h3 id=\"2-5、Git工作流程图\"><a href=\"#2-5、Git工作流程图\" class=\"headerlink\" title=\"2.5、Git工作流程图\"></a>2.5、Git工作流程图</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%9B%BE.png\"></p>\n<p>命令如下:</p>\n<ol>\n<li>clone(克隆):从远程仓库中克隆代码到本地仓库</li>\n<li>checkout(检出):从本地仓库中检出一个仓库分支然后进行修订</li>\n<li>add(添加):在提交前先将代码提交到暂存区</li>\n<li>commit(提交):提交到本地仓库.本地仓库中保存修改的各个历史版本</li>\n<li>fetch(抓取):从远程库,抓取到本地仓库,不进行任何的合并动作,一般操作比较少.</li>\n<li>pull(拉取):从远程库拉到本地库,自动进行合并(merge),然后放到工作区,相当于fetch+merge</li>\n<li>push(推送):修改完成后,需要和团队成员共享代码时,将代码推送到远程仓库</li>\n</ol>\n<h2 id=\"3、Git安装与常用命令\"><a href=\"#3、Git安装与常用命令\" class=\"headerlink\" title=\"3、Git安装与常用命令\"></a>3、Git安装与常用命令</h2><p>本教程里的git命令例子都是在Git Bash中演示的,会用到一些基本的Linux命令,在此为大家提前列举:</p>\n<ul>\n<li>ls/ll    查看当前目录</li>\n<li>cat    查看文件内容</li>\n<li>touch 创建文件</li>\n<li>vi     vi编辑器(使用vi编辑器是为了方便展示效果,学员可以记事本,editPlus,notPad++等其他编辑器)</li>\n</ul>\n<h3 id=\"3-1、Git环境配置\"><a href=\"#3-1、Git环境配置\" class=\"headerlink\" title=\"3.1、Git环境配置\"></a>3.1、Git环境配置</h3><h4 id=\"3-1-1-下载与安装\"><a href=\"#3-1-1-下载与安装\" class=\"headerlink\" title=\"3.1.1 下载与安装\"></a>3.1.1 下载与安装</h4><p>下载地址:<a href=\"https://git-scm.com/download\">https://git-scm.com/download</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/dowanload.png\"></p>\n<p>下载完成后可以得到如下安装文件:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/exe.png\"></p>\n<p>双击下载的安装文件来安装git,安装完成后在电脑桌面(也可以是其他目录)点击右键,如果能够看到如下两个菜单则说明git安装成功.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%88%90%E5%8A%9F.png\"></p>\n<p>备注:</p>\n<p>​    Git GUI:Git提供的图形界面工具</p>\n<p>​    Git Bash:Git提供的命令行工具</p>\n<p>​    当安装Git后首先要做的事情是设置用户名称和email地址.这是非常重要的,因为每次Git提交都会使用该用户信息</p>\n<h4 id=\"3-1-2-基本配置\"><a href=\"#3-1-2-基本配置\" class=\"headerlink\" title=\"3.1.2 基本配置\"></a>3.1.2 基本配置</h4><ol>\n<li><p>打开Git Bash</p>\n</li>\n<li><p>设置用户信息</p>\n<p>git config –global user.name “itcast”</p>\n<p>git config –global user.email “<a href=\"mailto:&#104;&#x65;&#108;&#108;&#111;&#64;&#x69;&#116;&#x63;&#97;&#115;&#116;&#46;&#99;&#110;\">&#104;&#x65;&#108;&#108;&#111;&#64;&#x69;&#116;&#x63;&#97;&#115;&#116;&#46;&#99;&#110;</a>“</p>\n</li>\n<li><p>查看配置信息</p>\n<p>git config –global user.name</p>\n<p>git config –global user.email</p>\n</li>\n</ol>\n<h4 id=\"3-1-3为常用指令配置别名-可选\"><a href=\"#3-1-3为常用指令配置别名-可选\" class=\"headerlink\" title=\"3.1.3为常用指令配置别名(可选)\"></a>3.1.3为常用指令配置别名(可选)</h4><p>有些常用的指令参数非常多,每次都要输入好多参数,我们可以使用别名.</p>\n<ol>\n<li><p>打开用户目录,创建.bashrc文件</p>\n<p>部分windows系统不允许用户创建点号开头的文件,可以打开gitBash,执行 touch ~/.bashrc</p>\n<p>~表示当前目录的根目录</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/bashrc.png\"></p>\n<ol start=\"2\">\n<li><p>在.bashrc文件中输入如下内容:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">用于输出git提交日志</span></span><br><span class=\"line\">alias git-log=&#x27;git log --pretty=oneline --all --graph --abbrev-commit&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">用于输出当前目录所有文件及基本信息</span></span><br><span class=\"line\">alias ll=&#x27;ls -al&#x27;</span><br></pre></td></tr></table></figure></li>\n<li><p>打开gitBash,执行source ~/.bashrc</p>\n</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/souce.png\"></p>\n<h4 id=\"3-1-4-解决GitBash乱码问题\"><a href=\"#3-1-4-解决GitBash乱码问题\" class=\"headerlink\" title=\"3.1.4 解决GitBash乱码问题\"></a>3.1.4 解决GitBash乱码问题</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E4%B9%B1%E7%A0%81%E8%AE%BE%E7%BD%AE.png\"></p>\n<h3 id=\"3-2、获取本地仓库\"><a href=\"#3-2、获取本地仓库\" class=\"headerlink\" title=\"3.2、获取本地仓库\"></a>3.2、获取本地仓库</h3><p>要使用Git对我们的代码进行版本控制,首先需要获得本地仓库</p>\n<p>(1)在电脑的任意位置创建一个空目录(例如test)作为我们的本地Git仓库</p>\n<p>(2)进入这个目录中,点击右键打开Git bash窗口</p>\n<p>(3)执行命令git init</p>\n<p>(4)如果创建成功后可在文件夹下看到隐藏的.git目录</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%8E%B7%E5%8F%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png\"></p>\n<h3 id=\"3-3、基础操作指令\"><a href=\"#3-3、基础操作指令\" class=\"headerlink\" title=\"3.3、基础操作指令\"></a>3.3、基础操作指令</h3><p>Git工作目录(除了.git文件外的目录叫做工作目录)下对于文件的修改(增加,删除,更新)会存在几个状态,这些修改的状态会随着我们执行Git命令而发生变化.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C%E6%8C%87%E4%BB%A4.png\"></p>\n<p>本章节主要讲解如何使用命令来控制状态之间的转换:</p>\n<ol>\n<li>git add (工作区–&gt;暂存区)</li>\n<li>git commit (暂存区–&gt;本地仓库)</li>\n</ol>\n<h4 id=\"3-3-1、查看修改的状态-status\"><a href=\"#3-3-1、查看修改的状态-status\" class=\"headerlink\" title=\"3.3.1、查看修改的状态(status)\"></a>3.3.1、查看修改的状态(status)</h4><ul>\n<li>作用:查看的修改的状态(暂存区、工作区)</li>\n<li>命令形式:git status</li>\n</ul>\n<h4 id=\"3-3-2、添加工作区到暂存区-add\"><a href=\"#3-3-2、添加工作区到暂存区-add\" class=\"headerlink\" title=\"3.3.2、添加工作区到暂存区(add)\"></a>3.3.2、添加工作区到暂存区(add)</h4><ul>\n<li><p>作用:添加工作区一个或多个文件的修改到暂存区</p>\n</li>\n<li><p>命令形式:git add 单个文件名|通配符</p>\n<p>将所有修改加入暂存区:git add .(.表示所有)</p>\n</li>\n</ul>\n<h4 id=\"3-3-3、提交暂存区到本地仓库-commit\"><a href=\"#3-3-3、提交暂存区到本地仓库-commit\" class=\"headerlink\" title=\"3.3.3、提交暂存区到本地仓库(commit)\"></a>3.3.3、提交暂存区到本地仓库(commit)</h4><ul>\n<li>作用:提交暂存区内容到本地仓库的当前分支</li>\n<li>命令形式:git commit -m ‘注释内容’</li>\n</ul>\n<h4 id=\"3-3-4、查看提交日志-log\"><a href=\"#3-3-4、查看提交日志-log\" class=\"headerlink\" title=\"3.3.4、查看提交日志(log)\"></a>3.3.4、查看提交日志(log)</h4><p>在3.1.3中配置的别名git-log就包含了这些参数,所以后续可以直接使用指令git-log</p>\n<ul>\n<li><p>作用:查看提交记录</p>\n</li>\n<li><p>命令形式:git log [option]</p>\n<p>options</p>\n<p>​    –all 显示所有分支</p>\n<p>​    –pretty=oneline 将提交信息显示为一行</p>\n<p>​    –abbrev-commit 使得输出得commitld更简短</p>\n<p>​    –graph 以图得形式显示</p>\n</li>\n</ul>\n<h4 id=\"3-3-5、版本回退\"><a href=\"#3-3-5、版本回退\" class=\"headerlink\" title=\"3.3.5、版本回退\"></a>3.3.5、版本回退</h4><ul>\n<li><p>作用:版本切换</p>\n</li>\n<li><p>命令形式:git reset –hard commitID</p>\n<p>commitID可以使用git-log或git log指令查看</p>\n</li>\n<li><p>如何查看已经删除得记录?</p>\n<p>git reflog(把所有的版本操作都记录下来了)</p>\n<p>这个指令可以看到已经删除的提交记录</p>\n<p>注意:</p>\n<p>这里选中即表示已经复制(不需要用CTRL C因为它在Linux中有其他的设置)</p>\n<p>选中之后即表示已经复制好,那么粘贴也不要使用ctrl+v,直接按一下滚轮,或者使用右键,选中粘贴也行.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80.png\"></p>\n</li>\n</ul>\n<h4 id=\"3-3-6、添加文件至忽略列表\"><a href=\"#3-3-6、添加文件至忽略列表\" class=\"headerlink\" title=\"3.3.6、添加文件至忽略列表\"></a>3.3.6、添加文件至忽略列表</h4><p>一般我们总会有些文件无需纳入git的管理,也不希望它们总出现在未跟踪文件列表.通常都是些自动生成的文件,比如日志文件,或者编译过程中创建的临时文件等.在这种情况下,我们可以在工作目录中创建一个名为.gitignore的文件(文件名称固定),列出要忽略的文件模式.下面是一个示例:</p>\n<p>在.gitignore文件中写上不需要git管理的文件,表示不需要管理所有的.a的文件.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%A4%BA%E4%BE%8B.png\"></p>\n<p>实际操作:</p>\n<p>首先从这个工作目录下打开git bash</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/3.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/4.png\"></p>\n<p>这里git add有两种方法:(1)git add 文件名;(2)git add’ .表示所有add(这里习惯用这种)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/5.png\"></p>\n<p>修改文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/6.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/7.png\"></p>\n<h3 id=\"3-4、分支\"><a href=\"#3-4、分支\" class=\"headerlink\" title=\"3.4、分支\"></a>3.4、分支</h3><p>几乎所有的版本控制系统都以某种形式支持分支.使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的bug修改,开发新的功能,以免影响开发主线.</p>\n<h4 id=\"3-4-1、查看本地分支\"><a href=\"#3-4-1、查看本地分支\" class=\"headerlink\" title=\"3.4.1、查看本地分支\"></a>3.4.1、查看本地分支</h4><ul>\n<li>命令:git branch</li>\n</ul>\n<h4 id=\"3-4-2、创建本地分支\"><a href=\"#3-4-2、创建本地分支\" class=\"headerlink\" title=\"3.4.2、创建本地分支\"></a>3.4.2、创建本地分支</h4><ul>\n<li>命令:git branch 分支名</li>\n</ul>\n<h4 id=\"3-4-3、切换分支-checkout\"><a href=\"#3-4-3、切换分支-checkout\" class=\"headerlink\" title=\"3.4.3、切换分支(checkout)\"></a>3.4.3、切换分支(checkout)</h4><ul>\n<li><p>命令:git checkout 分支名</p>\n<p>我们还可以直接切换到一个不存在的分支(创建并切换)</p>\n</li>\n<li><p>命令:git checkout -b 分支名</p>\n</li>\n</ul>\n<h4 id=\"3-4-4、合并分支-merge\"><a href=\"#3-4-4、合并分支-merge\" class=\"headerlink\" title=\"3.4.4、合并分支(merge)\"></a>3.4.4、合并分支(merge)</h4><p>一个分支上的提交可以合并到另一个分支</p>\n<p>命令:git merge 分支名称</p>\n<p>合并的快进模式:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%90%88%E5%B9%B6%E7%9A%84%E5%BF%AB%E8%BF%9B%E6%A8%A1%E5%BC%8F.png\"></p>\n<h4 id=\"3-4-5、删除分支\"><a href=\"#3-4-5、删除分支\" class=\"headerlink\" title=\"3.4.5、删除分支\"></a>3.4.5、删除分支</h4><p>不能删除当前分支,只能删除其他分支</p>\n<p>git branch -d b1 删除分支时,需要做各种检查</p>\n<p>git branch -D b1 不做任何检查,强制删除</p>\n<h4 id=\"3-4-6、解决冲突\"><a href=\"#3-4-6、解决冲突\" class=\"headerlink\" title=\"3.4.6、解决冲突\"></a>3.4.6、解决冲突</h4><p>当两个分支上对文件的修改可能会存在冲突,例如同时修改了同一个文件的同一行,这时就需要手动解决冲突,解决冲突步骤如下:</p>\n<ol>\n<li>处理文件中冲突的地方</li>\n<li>将解决完冲突的文件加入暂存区(add)</li>\n<li>提交到仓库(commit)</li>\n</ol>\n<p>冲突部分的内容处理如下所示:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%86%B2%E7%AA%81.png\"></p>\n<h4 id=\"3-4-7、开发中分支使用原则与流程\"><a href=\"#3-4-7、开发中分支使用原则与流程\" class=\"headerlink\" title=\"3.4.7、开发中分支使用原则与流程\"></a>3.4.7、开发中分支使用原则与流程</h4><p>几乎所有的版本控制系统都是以某种形式支持分支.使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的bug修改,开发新的功能,以免影响开发主线.</p>\n<p>在开发中,一般有如下分支使用原则与流程:</p>\n<ul>\n<li><p>master(生产)分支</p>\n<p>线上分支,主分支,中小规模项目作为线上运行的应用对应的分支;</p>\n</li>\n<li><p>develop(开发)分支</p>\n<p>是从master创建的分支,一般作为开发部门的主要开发分支,如果没有其他并行开发不同期上线要求,都可以在此版本进行开发,阶段开发完成后,需要是合并到master分支,准备上线.</p>\n</li>\n<li><p>feature/xxxx分支</p>\n<p>从develop创建的分支.一般是同期并发开发,但不同期上线时创建的分支,分支上的研发任务完成后合并到develop分支.</p>\n</li>\n<li><p>hotfix/xxxx分支</p>\n<p>从master派生的分支,一般作为线上bug修复使用,修复完成后需要合并到master,test,develop分支.</p>\n</li>\n<li><p>还有一些其他分支,在此不再详述,例如test分支(用于代码测试),pre分支(预上线分支)等等.</p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%BC%80%E5%8F%91%E4%B8%AD%E5%88%86%E6%94%AF%E7%9A%84%E5%8E%9F%E5%88%99.png\"></p>\n<h2 id=\"4、Git远程仓库\"><a href=\"#4、Git远程仓库\" class=\"headerlink\" title=\"4、Git远程仓库\"></a>4、Git远程仓库</h2><h3 id=\"4-1、常用的托管服务-远程仓库\"><a href=\"#4-1、常用的托管服务-远程仓库\" class=\"headerlink\" title=\"4.1、常用的托管服务[远程仓库]\"></a>4.1、常用的托管服务[远程仓库]</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前面我们已经知道了Git中存在两种类型的仓库,即本地仓库和远程仓库.那么我么如何搭建Git远程仓库呢?我们可以借助互联网上提供的一些代码托管来实现,其中比较常见的有GitHub,码云,GitLab等.</span><br><span class=\"line\">GitHub(地址:https://github.com/)是一个面向开源及私有软件项目的托管平台,因为只支持git作为唯一的版本库格式进行托管,故名GitHub</span><br><span class=\"line\">码云(地址:https://gitee.com/)是国内的一个代码托管平台,由于服务器在国内,所以相比于GitHub,码云速度会更快.</span><br><span class=\"line\">gitlab(地址:https://about.gitlab.com/)是一个用于仓库管理系统的开源项目,使用git作为代码管理工具,并在此基础上搭建起来的web服务,一般用于企业,学校等内部网络搭建git私服.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-2、注册码云\"><a href=\"#4-2、注册码云\" class=\"headerlink\" title=\"4.2、注册码云\"></a>4.2、注册码云</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B3%A8%E5%86%8C%E7%A0%81%E4%BA%91.png\"></p>\n<h3 id=\"4-3、创建远程仓库\"><a href=\"#4-3、创建远程仓库\" class=\"headerlink\" title=\"4.3、创建远程仓库\"></a>4.3、创建远程仓库</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%931.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%932.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%933.png\"></p>\n<h3 id=\"4-4、配置SSH公钥\"><a href=\"#4-4、配置SSH公钥\" class=\"headerlink\" title=\"4.4、配置SSH公钥\"></a>4.4、配置SSH公钥</h3><ul>\n<li><p>生成SSH公钥</p>\n<p>ssh-keygen-t rsa</p>\n<p>不断回车</p>\n<p>​    如果公钥已经存在,则自动覆盖</p>\n</li>\n<li><p>Gitee设置账户共公钥</p>\n<p>获取公钥</p>\n<p>​    cat ~/.ssh/id_rsa.pub</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%AC%E9%92%A5.png\"></p>\n</li>\n<li><p>验证是否配成功</p>\n<p>ssh-T <a href=\"mailto:&#x67;&#105;&#x74;&#64;&#x67;&#105;&#116;&#101;&#x65;&#46;&#99;&#x6f;&#109;\">&#x67;&#105;&#x74;&#64;&#x67;&#105;&#116;&#101;&#x65;&#46;&#99;&#x6f;&#109;</a></p>\n</li>\n</ul>\n<p>后面回答yes即可</p>\n<h3 id=\"4-5、操作远程仓库\"><a href=\"#4-5、操作远程仓库\" class=\"headerlink\" title=\"4.5、操作远程仓库\"></a>4.5、操作远程仓库</h3><h4 id=\"4-5-1、添加远程仓库\"><a href=\"#4-5-1、添加远程仓库\" class=\"headerlink\" title=\"4.5.1、添加远程仓库\"></a>4.5.1、添加远程仓库</h4><p>此操作是先初始化本地库,然后与已创建的远程库进行对接</p>\n<ul>\n<li><p>命令:git remote add &lt;远端名称&gt; &lt;仓库路径&gt;</p>\n<p>远端名称,默认是origin,取决于远端服务器设置</p>\n<p>仓库路径,从远端服务器获取此url</p>\n<p>例如:git remote add origin <a href=\"mailto:&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#x65;&#x65;&#x2e;&#99;&#111;&#109;\">&#x67;&#105;&#116;&#64;&#x67;&#105;&#x74;&#x65;&#x65;&#x2e;&#99;&#111;&#109;</a>:czbk_zhang_meng/git_test.git</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B7%BB%E5%8A%A0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n</li>\n</ul>\n<h4 id=\"4-5-2、查看远程仓库\"><a href=\"#4-5-2、查看远程仓库\" class=\"headerlink\" title=\"4.5.2、查看远程仓库\"></a>4.5.2、查看远程仓库</h4><ul>\n<li><p>命令:git remote</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E7%9C%8B%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n</li>\n</ul>\n<h4 id=\"4-5-3、推送到远程仓库\"><a href=\"#4-5-3、推送到远程仓库\" class=\"headerlink\" title=\"4.5.3、推送到远程仓库\"></a>4.5.3、推送到远程仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%81%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n<ul>\n<li><p>命令:git push [-f] [–set-upstream] [远端名称[本地分支名] [:远端分支名]]</p>\n<p>如果远程分支名和本地分支名称相同,则可以只写本地分支</p>\n<p>git push origin master</p>\n<p>-f表示强制覆盖</p>\n<p>–set-upstream推送到远端的同时并且建立起和远端分支的关联关系</p>\n<p>git push –set-upstream origin master</p>\n<p>如果当前分支已经和远端分支关联,则可以省略分支名和远端名</p>\n<p>git push将master分支推送到已关联的远端分支.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%812.png\"></p>\n</li>\n</ul>\n<p>验证是否推上去</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E8%AF%A2%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n<h4 id=\"4-5-4、本地分支与远程分支的关联关系\"><a href=\"#4-5-4、本地分支与远程分支的关联关系\" class=\"headerlink\" title=\"4.5.4、本地分支与远程分支的关联关系\"></a>4.5.4、本地分支与远程分支的关联关系</h4><ul>\n<li><p>查看关联关系我们可以使用git branch -vv命令</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%9F%A5%E7%9C%8B%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB.png\"></p>\n</li>\n</ul>\n<h4 id=\"4-5-5、从远程仓库克隆\"><a href=\"#4-5-5、从远程仓库克隆\" class=\"headerlink\" title=\"4.5.5、从远程仓库克隆\"></a>4.5.5、从远程仓库克隆</h4><p>如果已经有一个远端仓库,我们可以直接clone到本地</p>\n<ul>\n<li><p>命令:git clone &lt;仓库名称&gt; [本地目录]</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%86.png\"></p>\n</li>\n</ul>\n<p>本地目录可以省略,会自动生成一个目录(也就是以.git前面的git_test生成一个本地仓库的目录)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%861.png\"></p>\n<p>对于同一个仓库,一般只克隆一次</p>\n<h4 id=\"4-5-6、从远程仓库中抓取和拉取\"><a href=\"#4-5-6、从远程仓库中抓取和拉取\" class=\"headerlink\" title=\"4.5.6、从远程仓库中抓取和拉取\"></a>4.5.6、从远程仓库中抓取和拉取</h4><p>远程分支和本地分支一样,我们可以进行merge操作,只是需要先把远程仓库里的更新都下载到本地,在进行操作.</p>\n<ul>\n<li><p>抓取命令:git fetch [remote name] [branch name]</p>\n<p>抓取指令就是将仓库里的更新都抓取到本地,不会进行合并</p>\n<p>如果不指定远端名称和分支名,则抓取所有分支</p>\n</li>\n<li><p>拉取命令:git pull [remote name] [branch name]</p>\n<p>拉去指令就是将远端仓库的修改拉到本地并自动进行合并,等同于fetch+merge</p>\n<p>如果不指定远端名称和分支名,则抓取所有并更新当前分支.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8E%A8%E9%80%81.png\"></p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8B%89%E5%8F%96.png\"></p>\n<p>注意:</p>\n<p>退出vi编辑器要按esc,然后再输入:wq即退出了</p>\n<h4 id=\"4-5-7、解决合并冲突\"><a href=\"#4-5-7、解决合并冲突\" class=\"headerlink\" title=\"4.5.7、解决合并冲突\"></a>4.5.7、解决合并冲突</h4><p>在一段时间,A,B用户修改了同一个文件,且修改了同一行位置的代码,此时会发生合并冲突.</p>\n<p>A用户在本地修改代码后优先推送到远程仓库,此时B用户再本地修订代码,提交到本地仓库后,也需要推送到远程仓库,此时B用户晚于A用户,故需要先拉取远程仓库的提交,经过合并后才能推送到远端分支,如下图所示.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B3%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81.png\"></p>\n<p>再B用户拉取代码时,因为A,B用户同一段时间修改了同一个文件的相同位置的代码,故会发生合并冲突.</p>\n<p>远程分支也是分支,所有合并冲突的解决方式也和解决本地冲突的方式相同.</p>\n<p>练习:</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%BB%83%E4%B9%A01.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%BB%83%E4%B9%A02.png\"></p>\n<h2 id=\"5、在Idea中使用Git\"><a href=\"#5、在Idea中使用Git\" class=\"headerlink\" title=\"5、在Idea中使用Git\"></a>5、在Idea中使用Git</h2><h3 id=\"5-1、在Idea中配置Git\"><a href=\"#5-1、在Idea中配置Git\" class=\"headerlink\" title=\"5.1、在Idea中配置Git\"></a>5.1、在Idea中配置Git</h3><p>安装好Intellij IDEA后,如果Git安装在默认路径下,那么idea会自动找到git的位置,如果更改了Git的安装位置则需要手动配置Git的路劲,选择File-&gt;Settings打开设置窗口,找到Version Control下的git选项:<br><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea2.png\"></p>\n<h3 id=\"5-2、在Idea中操作Git\"><a href=\"#5-2、在Idea中操作Git\" class=\"headerlink\" title=\"5.2、在Idea中操作Git\"></a>5.2、在Idea中操作Git</h3><p>场景:本地已经有一个项目,但是并不是git项目,我们需要将这个放到码云的仓库里,和其他开发人员继续一起协作开发.</p>\n<h4 id=\"5-2-1、创建项目远程仓库\"><a href=\"#5-2-1、创建项目远程仓库\" class=\"headerlink\" title=\"5.2.1、创建项目远程仓库\"></a>5.2.1、创建项目远程仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%931.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%932.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9B%E5%BB%BA2.png\"></p>\n<h4 id=\"5-2-2、初始化本地仓库\"><a href=\"#5-2-2、初始化本地仓库\" class=\"headerlink\" title=\"5.2.2、初始化本地仓库\"></a>5.2.2、初始化本地仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png\"></p>\n<h4 id=\"5-2-3、设置远程仓库\"><a href=\"#5-2-3、设置远程仓库\" class=\"headerlink\" title=\"5.2.3、设置远程仓库\"></a>5.2.3、设置远程仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%AE%BE%E7%BD%AE3.png\"></p>\n<h4 id=\"5-2-4、提交到本地仓库\"><a href=\"#5-2-4、提交到本地仓库\" class=\"headerlink\" title=\"5.2.4、提交到本地仓库\"></a>5.2.4、提交到本地仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A4%E5%88%B0%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A41.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A42.png\"></p>\n<h4 id=\"5-2-5、推送到远程仓库\"><a href=\"#5-2-5、推送到远程仓库\" class=\"headerlink\" title=\"5.2.5、推送到远程仓库\"></a>5.2.5、推送到远程仓库</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A43.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%8F%90%E4%BA%A44.png\"></p>\n<p>在接下来的完成修改之后也是这样推送到远程仓库,只是和第一次有一些不一样</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%87%8D%E6%8E%A81.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%87%8D%E6%8E%A82.png\"></p>\n<h4 id=\"5-2-6、克隆远程仓库到本地\"><a href=\"#5-2-6、克隆远程仓库到本地\" class=\"headerlink\" title=\"5.2.6、克隆远程仓库到本地\"></a>5.2.6、克隆远程仓库到本地</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8611.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8622.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8633.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%85%8B%E9%9A%8644.png\"></p>\n<p>当两个开发在同一文件的统一代码上进行修改时,当第一个完成的能够push上去,后面的这个人就需要先pull一下,merge之后才能推.</p>\n<p>这里演示第二个人要怎么操作解决冲突</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B31.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B32.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B33.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B34.png\"></p>\n<p>解决好冲突代码之后要把红色报错部分改成蓝色,所以右击红色文件</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B35.png\"></p>\n<p>最后commit然后push上去</p>\n<h4 id=\"5-2-7、创建分支\"><a href=\"#5-2-7、创建分支\" class=\"headerlink\" title=\"5.2.7、创建分支\"></a>5.2.7、创建分支</h4><ul>\n<li><p>最常规的方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF1.png\"></p>\n</li>\n<li><p>最强大的方式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF2.png\"></p>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF3.png\"></p>\n<h4 id=\"5-2-8、切换分支及其他分支相关的操作\"><a href=\"#5-2-8、切换分支及其他分支相关的操作\" class=\"headerlink\" title=\"5.2.8、切换分支及其他分支相关的操作\"></a>5.2.8、切换分支及其他分支相关的操作</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%86%E6%94%AF4.png\"></p>\n<h4 id=\"5-2-9、解决冲突\"><a href=\"#5-2-9、解决冲突\" class=\"headerlink\" title=\"5.2.9、解决冲突\"></a>5.2.9、解决冲突</h4><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81.png\"></p>\n<h3 id=\"5-3、IDEA常用GIT操作入口\"><a href=\"#5-3、IDEA常用GIT操作入口\" class=\"headerlink\" title=\"5.3、IDEA常用GIT操作入口\"></a>5.3、IDEA常用GIT操作入口</h3><p>1.第一张图上的快捷入口可以基于满足开发的需求</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea%E6%93%8D%E4%BD%9C.png\"></p>\n<p>2.第二张图是更多在IDEA操作git的入口</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/idea%E6%93%8D%E4%BD%9C1.png\"></p>\n<h3 id=\"5-4、场景分析\"><a href=\"#5-4、场景分析\" class=\"headerlink\" title=\"5.4、场景分析\"></a>5.4、场景分析</h3><p>基于我们后面的实战模拟,我们做一个综合练习</p>\n<p>当前的开发环境如下,我们每个人都对这个项目已经开发一段时间,接下来我们要切换成团队开发模式.</p>\n<p>也就是我们由一个团队来完成这个项目实战的内容.团队由组长和若干组员组成(组长就是开发中的项目经理).所有操作在idea中完成.</p>\n<p>来呢西场景如下:</p>\n<p>1.由组长,基于本项目创建本地仓库;创建远程仓库,推送项目到远程仓库.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF1.png\"></p>\n<p>2.每一位组员从远程仓库克隆项目到idea中,这样每位同学在自己的电脑上就有了一个工作副本,可以证实的开始开发了.我们模拟两个组员(组员A,组员B),克隆两个工作区.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF2.png\"></p>\n<p>3.组员A修改工作区,提交到本地仓库,再推送到远程仓库.组员B可以直接从远程仓库获取最新的代码.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF3.png\"></p>\n<p>4.组员A和组员B修改了同一个文件的同一行,提交到本地没有问题,但是推送到远程仓库时,后一个推送操作就会失败.</p>\n<p>解决方法:需要先获取远程仓库的代码到本地仓库,编辑冲突,提交并推送代码.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF4.png\"></p>\n<h2 id=\"附-几条铁令\"><a href=\"#附-几条铁令\" class=\"headerlink\" title=\"附:几条铁令\"></a>附:几条铁令</h2><p>1.切换分支前先提交本地的修改</p>\n<p>2.代码及时提交,提交过了就不会丢</p>\n<p>3.遇到任何问题都不要删除文件目录</p>\n<h2 id=\"附-疑难问题解决\"><a href=\"#附-疑难问题解决\" class=\"headerlink\" title=\"附:疑难问题解决\"></a>附:疑难问题解决</h2><p>1.windows下看不到隐藏文件(.bashrc)</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6.png\"></p>\n<h2 id=\"附-IDEA集成GitBash作为Terminal\"><a href=\"#附-IDEA集成GitBash作为Terminal\" class=\"headerlink\" title=\"附:IDEA集成GitBash作为Terminal\"></a>附:IDEA集成GitBash作为Terminal</h2><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/terminal.png\"></p>\n<h2 id=\"git常用指令速查\"><a href=\"#git常用指令速查\" class=\"headerlink\" title=\"git常用指令速查\"></a>git常用指令速查</h2><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%80%9F%E6%9F%A5png.png\"></p>\n"},{"title":"黑盒测试的用例设计方法","date":"2022-08-02T02:58:00.000Z","description":"目标:1. 测试用例基本知识2. 黑盒测试用例设计方法","cover":"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/5(1).webp","abbrlink":"c5309831","_content":"\n# 黑盒测试的用例设计方法\n\n目标:\n\n1. 测试用例基本知识\n2. 黑盒测试用例设计方法\n\n## 测试用例的基本知识\n\n### 测试用例的定义\n\n测试用例的定义:是为了特定的目的而设计的一组有测试输入,执行条件,预期结果的案例(文档)\n\n### 测试用例的构成要素\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%9A%84%E6%9E%84%E6%88%90%E8%A6%81%E7%B4%A0.png)\n\n### 测试用例样例图\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%A0%B7%E4%BE%8B%E5%9B%BE.png)\n\n备注:\n\n在实际工作中根据项目要求对用例设计要素可做调整,上述要素几乎覆盖常见用例设计模板\n\n### 总结\n\n* 测试用例的定义:软件测试的核心,为了特定目的而设计的一组测试输入,执行条件,预期结果的输出文档\n* 测试用例构成要素:用例编号,用力标题,测试项目,用力级别,预置条件,测试输入,执行步骤,预期结果\n\n## 黑盒测试用例设计方法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.png)\n\n### 等价类\n\n等价类概念:在所有测试的数据中,具有某种共同特征的数据子集.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB3png.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB4.png)\n\n### 边界值\n\n大量的错误是发生在输入或输出范围得边界上,而不是在输入范围的内部\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC1.png)\n\n边界值:选取正好等于,刚刚好大于或刚刚好小于边界值作为测试数据\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC3.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC4.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC5.png)\n\n### 判定表法\n\n使用等价类方法时对于输入域及输入域存在关联时无法覆盖\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A81.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A82.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A83.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A84.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A85.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A86.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A87.png)\n\n### 因果图法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE3.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE4.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE5.png)\n\n### 状态迁移图法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE3.png)\n\n### 场景法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%951.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%952.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%953.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%954.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%955.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%956.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%957.png)\n\n### 正交实验法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A41.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A42.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A43.png)\n\n### 错误推测法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%94%99%E8%AF%AF%E6%B3%95.png)\n\n### 总结\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%80%BB%E7%BB%932.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/黑盒测试/黑河测试的用例设计方法.md","raw":"---\ntitle: 黑盒测试的用例设计方法\ndate: '2022-8-2 10:58:00'\ndescription: '目标:1. 测试用例基本知识2. 黑盒测试用例设计方法'\ncover: 'https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/5(1).webp'\nabbrlink: c5309831\ncategories: \n - [软件测试]\n - [黑盒测试]\ntags:\n - 测试用例设计\n - 等价类划分\n - 边界值分析\n - 判定表法\n - 因果图法\n - 状态迁移法\n - 场景法\n - 正交实验设计法\n---\n\n# 黑盒测试的用例设计方法\n\n目标:\n\n1. 测试用例基本知识\n2. 黑盒测试用例设计方法\n\n## 测试用例的基本知识\n\n### 测试用例的定义\n\n测试用例的定义:是为了特定的目的而设计的一组有测试输入,执行条件,预期结果的案例(文档)\n\n### 测试用例的构成要素\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%9A%84%E6%9E%84%E6%88%90%E8%A6%81%E7%B4%A0.png)\n\n### 测试用例样例图\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%A0%B7%E4%BE%8B%E5%9B%BE.png)\n\n备注:\n\n在实际工作中根据项目要求对用例设计要素可做调整,上述要素几乎覆盖常见用例设计模板\n\n### 总结\n\n* 测试用例的定义:软件测试的核心,为了特定目的而设计的一组测试输入,执行条件,预期结果的输出文档\n* 测试用例构成要素:用例编号,用力标题,测试项目,用力级别,预置条件,测试输入,执行步骤,预期结果\n\n## 黑盒测试用例设计方法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.png)\n\n### 等价类\n\n等价类概念:在所有测试的数据中,具有某种共同特征的数据子集.\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB3png.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB4.png)\n\n### 边界值\n\n大量的错误是发生在输入或输出范围得边界上,而不是在输入范围的内部\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC1.png)\n\n边界值:选取正好等于,刚刚好大于或刚刚好小于边界值作为测试数据\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC3.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC4.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC5.png)\n\n### 判定表法\n\n使用等价类方法时对于输入域及输入域存在关联时无法覆盖\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A81.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A82.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A83.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A84.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A85.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A86.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A87.png)\n\n### 因果图法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE3.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE4.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE5.png)\n\n### 状态迁移图法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE1.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE2.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE3.png)\n\n### 场景法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%951.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%952.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%953.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%954.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%955.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%956.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%957.png)\n\n### 正交实验法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A41.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A42.png)\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A43.png)\n\n### 错误推测法\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%94%99%E8%AF%AF%E6%B3%95.png)\n\n### 总结\n\n![](https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%80%BB%E7%BB%932.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"黑盒测试/黑河测试的用例设计方法","published":1,"updated":"2022-08-03T03:34:37.418Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl6d22sjh0003lovm8b6t326b","content":"<h1 id=\"黑盒测试的用例设计方法\"><a href=\"#黑盒测试的用例设计方法\" class=\"headerlink\" title=\"黑盒测试的用例设计方法\"></a>黑盒测试的用例设计方法</h1><p>目标:</p>\n<ol>\n<li>测试用例基本知识</li>\n<li>黑盒测试用例设计方法</li>\n</ol>\n<h2 id=\"测试用例的基本知识\"><a href=\"#测试用例的基本知识\" class=\"headerlink\" title=\"测试用例的基本知识\"></a>测试用例的基本知识</h2><h3 id=\"测试用例的定义\"><a href=\"#测试用例的定义\" class=\"headerlink\" title=\"测试用例的定义\"></a>测试用例的定义</h3><p>测试用例的定义:是为了特定的目的而设计的一组有测试输入,执行条件,预期结果的案例(文档)</p>\n<h3 id=\"测试用例的构成要素\"><a href=\"#测试用例的构成要素\" class=\"headerlink\" title=\"测试用例的构成要素\"></a>测试用例的构成要素</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%9A%84%E6%9E%84%E6%88%90%E8%A6%81%E7%B4%A0.png\"></p>\n<h3 id=\"测试用例样例图\"><a href=\"#测试用例样例图\" class=\"headerlink\" title=\"测试用例样例图\"></a>测试用例样例图</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%A0%B7%E4%BE%8B%E5%9B%BE.png\"></p>\n<p>备注:</p>\n<p>在实际工作中根据项目要求对用例设计要素可做调整,上述要素几乎覆盖常见用例设计模板</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>测试用例的定义:软件测试的核心,为了特定目的而设计的一组测试输入,执行条件,预期结果的输出文档</li>\n<li>测试用例构成要素:用例编号,用力标题,测试项目,用力级别,预置条件,测试输入,执行步骤,预期结果</li>\n</ul>\n<h2 id=\"黑盒测试用例设计方法\"><a href=\"#黑盒测试用例设计方法\" class=\"headerlink\" title=\"黑盒测试用例设计方法\"></a>黑盒测试用例设计方法</h2><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.png\"></p>\n<h3 id=\"等价类\"><a href=\"#等价类\" class=\"headerlink\" title=\"等价类\"></a>等价类</h3><p>等价类概念:在所有测试的数据中,具有某种共同特征的数据子集.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB3png.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB4.png\"></p>\n<h3 id=\"边界值\"><a href=\"#边界值\" class=\"headerlink\" title=\"边界值\"></a>边界值</h3><p>大量的错误是发生在输入或输出范围得边界上,而不是在输入范围的内部</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC1.png\"></p>\n<p>边界值:选取正好等于,刚刚好大于或刚刚好小于边界值作为测试数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC3.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC4.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC5.png\"></p>\n<h3 id=\"判定表法\"><a href=\"#判定表法\" class=\"headerlink\" title=\"判定表法\"></a>判定表法</h3><p>使用等价类方法时对于输入域及输入域存在关联时无法覆盖</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A81.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A82.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A83.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A84.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A85.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A86.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A87.png\"></p>\n<h3 id=\"因果图法\"><a href=\"#因果图法\" class=\"headerlink\" title=\"因果图法\"></a>因果图法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE3.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE4.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE5.png\"></p>\n<h3 id=\"状态迁移图法\"><a href=\"#状态迁移图法\" class=\"headerlink\" title=\"状态迁移图法\"></a>状态迁移图法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE3.png\"></p>\n<h3 id=\"场景法\"><a href=\"#场景法\" class=\"headerlink\" title=\"场景法\"></a>场景法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%951.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%952.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%953.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%954.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%955.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%956.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%957.png\"></p>\n<h3 id=\"正交实验法\"><a href=\"#正交实验法\" class=\"headerlink\" title=\"正交实验法\"></a>正交实验法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A41.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A42.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A43.png\"></p>\n<h3 id=\"错误推测法\"><a href=\"#错误推测法\" class=\"headerlink\" title=\"错误推测法\"></a>错误推测法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%94%99%E8%AF%AF%E6%B3%95.png\"></p>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%80%BB%E7%BB%932.png\"></p>\n","site":{"data":{"link":[{"class_name":"友情鏈接","class_desc":"那些人，那些事","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-tw/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、簡單且強大的網誌框架"}]},{"class_name":"網站","class_desc":"值得推薦的網站","link_list":[{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"視頻網站"},{"name":"Weibo","link":"https://www.weibo.com/","avatar":"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png","descr":"中國最大社交分享平台"},{"name":"Twitter","link":"https://twitter.com/","avatar":"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png","descr":"社交分享平台"}]}]}},"excerpt":"","more":"<h1 id=\"黑盒测试的用例设计方法\"><a href=\"#黑盒测试的用例设计方法\" class=\"headerlink\" title=\"黑盒测试的用例设计方法\"></a>黑盒测试的用例设计方法</h1><p>目标:</p>\n<ol>\n<li>测试用例基本知识</li>\n<li>黑盒测试用例设计方法</li>\n</ol>\n<h2 id=\"测试用例的基本知识\"><a href=\"#测试用例的基本知识\" class=\"headerlink\" title=\"测试用例的基本知识\"></a>测试用例的基本知识</h2><h3 id=\"测试用例的定义\"><a href=\"#测试用例的定义\" class=\"headerlink\" title=\"测试用例的定义\"></a>测试用例的定义</h3><p>测试用例的定义:是为了特定的目的而设计的一组有测试输入,执行条件,预期结果的案例(文档)</p>\n<h3 id=\"测试用例的构成要素\"><a href=\"#测试用例的构成要素\" class=\"headerlink\" title=\"测试用例的构成要素\"></a>测试用例的构成要素</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E7%9A%84%E6%9E%84%E6%88%90%E8%A6%81%E7%B4%A0.png\"></p>\n<h3 id=\"测试用例样例图\"><a href=\"#测试用例样例图\" class=\"headerlink\" title=\"测试用例样例图\"></a>测试用例样例图</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%A0%B7%E4%BE%8B%E5%9B%BE.png\"></p>\n<p>备注:</p>\n<p>在实际工作中根据项目要求对用例设计要素可做调整,上述要素几乎覆盖常见用例设计模板</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><ul>\n<li>测试用例的定义:软件测试的核心,为了特定目的而设计的一组测试输入,执行条件,预期结果的输出文档</li>\n<li>测试用例构成要素:用例编号,用力标题,测试项目,用力级别,预置条件,测试输入,执行步骤,预期结果</li>\n</ul>\n<h2 id=\"黑盒测试用例设计方法\"><a href=\"#黑盒测试用例设计方法\" class=\"headerlink\" title=\"黑盒测试用例设计方法\"></a>黑盒测试用例设计方法</h2><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95.png\"></p>\n<h3 id=\"等价类\"><a href=\"#等价类\" class=\"headerlink\" title=\"等价类\"></a>等价类</h3><p>等价类概念:在所有测试的数据中,具有某种共同特征的数据子集.</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB3png.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E7%AD%89%E4%BB%B7%E7%B1%BB4.png\"></p>\n<h3 id=\"边界值\"><a href=\"#边界值\" class=\"headerlink\" title=\"边界值\"></a>边界值</h3><p>大量的错误是发生在输入或输出范围得边界上,而不是在输入范围的内部</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC1.png\"></p>\n<p>边界值:选取正好等于,刚刚好大于或刚刚好小于边界值作为测试数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC3.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC4.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BE%B9%E7%95%8C%E5%80%BC5.png\"></p>\n<h3 id=\"判定表法\"><a href=\"#判定表法\" class=\"headerlink\" title=\"判定表法\"></a>判定表法</h3><p>使用等价类方法时对于输入域及输入域存在关联时无法覆盖</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A81.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A82.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A83.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A84.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A85.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A86.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%88%A4%E5%AE%9A%E8%A1%A87.png\"></p>\n<h3 id=\"因果图法\"><a href=\"#因果图法\" class=\"headerlink\" title=\"因果图法\"></a>因果图法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE3.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE4.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9B%A0%E6%9E%9C%E5%9B%BE5.png\"></p>\n<h3 id=\"状态迁移图法\"><a href=\"#状态迁移图法\" class=\"headerlink\" title=\"状态迁移图法\"></a>状态迁移图法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE1.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE2.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E8%BF%81%E7%A7%BB%E5%9B%BE3.png\"></p>\n<h3 id=\"场景法\"><a href=\"#场景法\" class=\"headerlink\" title=\"场景法\"></a>场景法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%951.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%952.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%953.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%954.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%955.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%956.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E5%9C%BA%E6%99%AF%E6%B3%957.png\"></p>\n<h3 id=\"正交实验法\"><a href=\"#正交实验法\" class=\"headerlink\" title=\"正交实验法\"></a>正交实验法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A41.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A42.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%AD%A3%E4%BA%A43.png\"></p>\n<h3 id=\"错误推测法\"><a href=\"#错误推测法\" class=\"headerlink\" title=\"错误推测法\"></a>错误推测法</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E9%94%99%E8%AF%AF%E6%B3%95.png\"></p>\n<h3 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p><img src=\"https://cdn.jsdelivr.net/gh/ZXY-hhh/picgo/img/%E6%80%BB%E7%BB%932.png\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl6d22sjb0001lovm5ckbcpmv","category_id":"cl6d22sjo0006lovmhj8f8rjm","_id":"cl6d22sjv000glovmca4a3bfi"},{"post_id":"cl6d22sjb0001lovm5ckbcpmv","category_id":"cl6d22sjt000clovmgc0p1ioa","_id":"cl6d22sjw000ilovm6m9pczs0"},{"post_id":"cl6d22sjh0003lovm8b6t326b","category_id":"cl6d22sjr000alovm4ooyd6sp","_id":"cl6d22sjw000mlovm7n261tg2"},{"post_id":"cl6d22sjh0003lovm8b6t326b","category_id":"cl6d22sju000elovm9ejx99v5","_id":"cl6d22sjx000olovm65a9g20q"}],"PostTag":[{"post_id":"cl6d22sjb0001lovm5ckbcpmv","tag_id":"cl6d22sjl0004lovmblxlf016","_id":"cl6d22sjv000hlovmcssxcb8l"},{"post_id":"cl6d22sjb0001lovm5ckbcpmv","tag_id":"cl6d22sjr0009lovmhnwx6j6p","_id":"cl6d22sjw000jlovmbpiw3nfn"},{"post_id":"cl6d22sjb0001lovm5ckbcpmv","tag_id":"cl6d22sjt000blovm6c1r8acp","_id":"cl6d22sjw000llovmfffwfyg2"},{"post_id":"cl6d22sjb0001lovm5ckbcpmv","tag_id":"cl6d22sju000dlovm5lqhapvo","_id":"cl6d22sjw000nlovm4bc5dqdx"},{"post_id":"cl6d22sjh0003lovm8b6t326b","tag_id":"cl6d22sjv000flovm71xfavj8","_id":"cl6d22sjz000vlovm08925qxs"},{"post_id":"cl6d22sjh0003lovm8b6t326b","tag_id":"cl6d22sjw000klovm0m0q6c1s","_id":"cl6d22sjz000wlovmdeq6bnsm"},{"post_id":"cl6d22sjh0003lovm8b6t326b","tag_id":"cl6d22sjx000plovmhnpe3r5y","_id":"cl6d22sjz000xlovm1g4v6r8t"},{"post_id":"cl6d22sjh0003lovm8b6t326b","tag_id":"cl6d22sjx000qlovma4zx3tsg","_id":"cl6d22sjz000ylovm2jvqdw35"},{"post_id":"cl6d22sjh0003lovm8b6t326b","tag_id":"cl6d22sjy000rlovmh51kb9q5","_id":"cl6d22sjz000zlovm22vd9xdv"},{"post_id":"cl6d22sjh0003lovm8b6t326b","tag_id":"cl6d22sjy000slovm50az3607","_id":"cl6d22sjz0010lovm6kl0c1fm"},{"post_id":"cl6d22sjh0003lovm8b6t326b","tag_id":"cl6d22sjy000tlovm0aly7z0g","_id":"cl6d22sjz0011lovm9cm6085m"},{"post_id":"cl6d22sjh0003lovm8b6t326b","tag_id":"cl6d22sjy000ulovmbta1hx16","_id":"cl6d22sjz0012lovmb5qr5nk4"}],"Tag":[{"name":"Git基本概念","_id":"cl6d22sjl0004lovmblxlf016"},{"name":"Git工作流程","_id":"cl6d22sjr0009lovmhnwx6j6p"},{"name":"Git代码托管","_id":"cl6d22sjt000blovm6c1r8acp"},{"name":"使用idea操作Git","_id":"cl6d22sju000dlovm5lqhapvo"},{"name":"测试用例设计","_id":"cl6d22sjv000flovm71xfavj8"},{"name":"等价类划分","_id":"cl6d22sjw000klovm0m0q6c1s"},{"name":"边界值分析","_id":"cl6d22sjx000plovmhnpe3r5y"},{"name":"判定表法","_id":"cl6d22sjx000qlovma4zx3tsg"},{"name":"因果图法","_id":"cl6d22sjy000rlovmh51kb9q5"},{"name":"状态迁移法","_id":"cl6d22sjy000slovm50az3607"},{"name":"场景法","_id":"cl6d22sjy000tlovm0aly7z0g"},{"name":"正交实验设计法","_id":"cl6d22sjy000ulovmbta1hx16"}]}}